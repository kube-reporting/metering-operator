apiVersion: v1
kind: Con***REMOVED***gMap
metadata:
  name: hive-scripts
data:
  copy-hadoop-con***REMOVED***g.sh: |
    #!/bin/bash
    set -ex
    cp -v -L -r -f /hadoop-starting-con***REMOVED***g/* /hadoop-con***REMOVED***g/
    cd /hadoop-con***REMOVED***g/
    faq '.con***REMOVED***guration.property+=[{name: ("fs.azure.account.key." + env.AZURE_STORAGE_ACCOUNT_NAME + ".blob.core.windows.net"), value: env.AZURE_SECRET_ACCESS_KEY }]' core-site.xml > core-site.xml.temp
    cp core-site.xml.temp core-site.xml
    if [ -a /gcs-json/gcs-service-account.json ]; then
      faq '.con***REMOVED***guration.property+=[{name: "fs.gs.auth.service.account.json.key***REMOVED***le" , value: "/gcs-json/gcs-service-account.json" }]' core-site.xml > core-site.xml.temp.temp
      cp core-site.xml.temp.temp core-site.xml
    ***REMOVED***

  entrypoint.sh: |
    #!/bin/bash
    set -e

    # add UID to /etc/passwd if missing
    if ! whoami &> /dev/null; then
        if [ -w /etc/passwd ]; then
            echo "Adding user ${USER_NAME:-hadoop} with current UID $(id -u) to /etc/passwd"
            # Remove existing entry with user ***REMOVED***rst.
            # cannot use sed -i because we do not have permission to write new
            # ***REMOVED***les into /etc
            sed  "/${USER_NAME:-hadoop}:x/d" /etc/passwd > /tmp/passwd
            # add our user with our current user ID into passwd
            echo "${USER_NAME:-hadoop}:x:$(id -u):0:${USER_NAME:-hadoop} user:${HOME}:/sbin/nologin" >> /tmp/passwd
            # overwrite existing contents with new contents (cannot replace the
            # ***REMOVED***le due to permissions)
            cat /tmp/passwd > /etc/passwd
            rm /tmp/passwd
        ***REMOVED***
    ***REMOVED***

    # symlink our con***REMOVED***guration ***REMOVED***les to the correct location
    if [ -f /hadoop-con***REMOVED***g/core-site.xml ]; then
      ln -s -f /hadoop-con***REMOVED***g/core-site.xml /etc/hadoop/core-site.xml
    ***REMOVED***
      echo "/hadoop-con***REMOVED***g/core-site.xml doesnt exist, skipping symlink"
    ***REMOVED***
    if [ -f /hadoop-con***REMOVED***g/hdfs-site.xml ]; then
      ln -s -f /hadoop-con***REMOVED***g/hdfs-site.xml /etc/hadoop/hdfs-site.xml
    ***REMOVED***
      echo "/hadoop-con***REMOVED***g/hdfs-site.xml doesnt exist, skipping symlink"
    ***REMOVED***

    ln -s -f /hive-con***REMOVED***g/hive-site.xml $HIVE_HOME/conf/hive-site.xml
    ln -s -f /hive-con***REMOVED***g/hive-log4j2.properties $HIVE_HOME/conf/hive-log4j2.properties
    ln -s -f /hive-con***REMOVED***g/hive-exec-log4j2.properties $HIVE_HOME/conf/hive-exec-log4j2.properties

    export HADOOP_LOG_DIR="${HADOOP_HOME}/logs"
    # Set garbage collection settings
    export GC_SETTINGS="-XX:+UseG1GC -XX:G1HeapRegionSize=32M -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${HADOOP_LOG_DIR}/heap_dump.bin -XX:+ExitOnOutOfMemoryError -XX:ErrorFile=${HADOOP_LOG_DIR}/java_error%p.log"

    export VM_OPTIONS="$VM_OPTIONS -XX:+UseContainerSupport"

    if [ -n "$JVM_INITIAL_RAM_PERCENTAGE" ]; then
      VM_OPTIONS="$VM_OPTIONS -XX:InitialRAMPercentage=$JVM_INITIAL_RAM_PERCENTAGE"
    ***REMOVED***
    if [ -n "$JVM_MAX_RAM_PERCENTAGE" ]; then
      VM_OPTIONS="$VM_OPTIONS -XX:MaxRAMPercentage=$JVM_MAX_RAM_PERCENTAGE"
    ***REMOVED***
    if [ -n "$JVM_MIN_RAM_PERCENTAGE" ]; then
      VM_OPTIONS="$VM_OPTIONS -XX:MinRAMPercentage=$JVM_MIN_RAM_PERCENTAGE"
    ***REMOVED***

    # Set JMX options
    export JMX_OPTIONS="-javaagent:/opt/jmx_exporter/jmx_exporter.jar=8082:/opt/jmx_exporter/con***REMOVED***g/con***REMOVED***g.yml -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=8081 -Dcom.sun.management.jmxremote.rmi.port=8081 -Djava.rmi.server.hostname=127.0.0.1"

    # Set garbage collection logs
    GC_SETTINGS="${GC_SETTINGS} -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xloggc:${HADOOP_LOG_DIR}/gc.log"
    GC_SETTINGS="${GC_SETTINGS} -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=3M"

    export HIVE_LOGLEVEL="${HIVE_LOGLEVEL:-INFO}"
    export HADOOP_OPTS="${HADOOP_OPTS} ${VM_OPTIONS} ${GC_SETTINGS} ${JMX_OPTIONS}"
    export HIVE_METASTORE_HADOOP_OPTS=" -Dhive.log.level=${HIVE_LOGLEVEL} "
    export HIVE_OPTS="${HIVE_OPTS} --hiveconf hive.root.logger=${HIVE_LOGLEVEL},console "

    exec $@
