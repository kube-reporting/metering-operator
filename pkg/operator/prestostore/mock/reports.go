// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/operator-framework/operator-metering/pkg/operator/prestostore (interfaces: ReportResultsRepo)

// Package mockprestostore is a generated GoMock package.
package mockprestostore

import (
	gomock "github.com/golang/mock/gomock"
	presto "github.com/operator-framework/operator-metering/pkg/presto"
	reflect "reflect"
)

// MockReportResultsRepo is a mock of ReportResultsRepo interface
type MockReportResultsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockReportResultsRepoMockRecorder
}

// MockReportResultsRepoMockRecorder is the mock recorder for MockReportResultsRepo
type MockReportResultsRepoMockRecorder struct {
	mock *MockReportResultsRepo
}

// NewMockReportResultsRepo creates a new mock instance
func NewMockReportResultsRepo(ctrl *gomock.Controller) *MockReportResultsRepo {
	mock := &MockReportResultsRepo{ctrl: ctrl}
	mock.recorder = &MockReportResultsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockReportResultsRepo) EXPECT() *MockReportResultsRepoMockRecorder {
	return m.recorder
}

// DeleteReportResults mocks base method
func (m *MockReportResultsRepo) DeleteReportResults(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteReportResults", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteReportResults indicates an expected call of DeleteReportResults
func (mr *MockReportResultsRepoMockRecorder) DeleteReportResults(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteReportResults", reflect.TypeOf((*MockReportResultsRepo)(nil).DeleteReportResults), arg0)
}

// GetReportResults mocks base method
func (m *MockReportResultsRepo) GetReportResults(arg0 string, arg1 []presto.Column) ([]presto.Row, error) {
	ret := m.ctrl.Call(m, "GetReportResults", arg0, arg1)
	ret0, _ := ret[0].([]presto.Row)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReportResults indicates an expected call of GetReportResults
func (mr *MockReportResultsRepoMockRecorder) GetReportResults(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReportResults", reflect.TypeOf((*MockReportResultsRepo)(nil).GetReportResults), arg0, arg1)
}

// StoreReportResults mocks base method
func (m *MockReportResultsRepo) StoreReportResults(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "StoreReportResults", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreReportResults indicates an expected call of StoreReportResults
func (mr *MockReportResultsRepoMockRecorder) StoreReportResults(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreReportResults", reflect.TypeOf((*MockReportResultsRepo)(nil).StoreReportResults), arg0, arg1)
}
