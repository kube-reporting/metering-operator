---
#
# Validate user-provided Hive TLS con***REMOVED***guration when top-level spec.tls.enabled is set to false
#
- name: Validate the user-provided Hive TLS con***REMOVED***guration
  include_tasks: validate_hive_tls.yml
  when: not meteringcon***REMOVED***g_tls_enabled

#
# Check for Hive TLS and auth secret existence (to avoid re-generating/overwriting the secret data if that secret name already exists)
#
- name: Check for the existence of Hive TLS-related secrets
  block:
  - name: Check for the existence of the Hive Metastore TLS secret
    k8s_facts:
      api_version: v1
      kind: Secret
      name: "{{ meteringcon***REMOVED***g_spec.hive.spec.metastore.con***REMOVED***g.tls.secretName }}"
      namespace: "{{ meta.namespace }}"
    no_log: true
    register: hive_metastore_tls_buf

  - name: Check for the existence of the Hive Server Metastore TLS secret
    k8s_facts:
      api_version: v1
      kind: Secret
      name: "{{ meteringcon***REMOVED***g_spec.hive.spec.server.con***REMOVED***g.metastoreTLS.secretName }}"
      namespace: "{{ meta.namespace }}"
    no_log: true
    register: hive_server_client_tls_buf

  - name: Check for the existence of the Hive Server TLS secret
    k8s_facts:
      api_version: v1
      kind: Secret
      name: "{{ meteringcon***REMOVED***g_spec.hive.spec.server.con***REMOVED***g.tls.secretName }}"
      namespace: "{{ meta.namespace }}"
    no_log: true
    register: hive_server_tls_buf

  - name: Con***REMOVED***gure Hive Metastore to use existing server TLS secret data
    set_fact:
      _meteringcon***REMOVED***g_hive_metastore_server_ca_certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_tls_root_ca_certi***REMOVED***cate }}"
      _meteringcon***REMOVED***g_hive_metastore_server_certi***REMOVED***cate: "{{ hive_metastore_tls_buf.resources[0].data['tls.crt'] | b64decode }}"
      _meteringcon***REMOVED***g_hive_metastore_server_key: "{{ hive_metastore_tls_buf.resources[0].data['tls.key'] | b64decode }}"
    no_log: true
    when: hive_metastore_tls_secret_exists

  - name: Con***REMOVED***gure Hive Server to use existing server TLS secret data
    set_fact:
      _meteringcon***REMOVED***g_hive_server_ca_certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_tls_root_ca_certi***REMOVED***cate }}"
      _meteringcon***REMOVED***g_hive_server_certi***REMOVED***cate: "{{ hive_server_tls_buf.resources[0].data['tls.crt'] | b64decode }}"
      _meteringcon***REMOVED***g_hive_server_key: "{{ hive_server_tls_buf.resources[0].data['tls.key'] | b64decode }}"
    no_log: true
    when: hive_server_tls_secret_exists

  - name: Con***REMOVED***gure Hive Server to use existing client TLS secret data
    set_fact:
      _meteringcon***REMOVED***g_hive_server_client_ca_certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_tls_root_ca_certi***REMOVED***cate }}"
      _meteringcon***REMOVED***g_hive_server_client_certi***REMOVED***cate: "{{ hive_server_client_tls_buf.resources[0].data['tls.crt'] | b64decode }}"
      _meteringcon***REMOVED***g_hive_server_client_key: "{{ hive_server_client_tls_buf.resources[0].data['tls.key'] | b64decode }}"
    no_log: true
    when: hive_server_client_tls_secret_exists
  vars:
    hive_metastore_tls_secret_exists: "{{ hive_metastore_tls_buf.resources is de***REMOVED***ned and hive_metastore_tls_buf.resources | length > 0 }}"
    hive_server_tls_secret_exists: "{{ hive_server_tls_buf.resources is de***REMOVED***ned and hive_server_tls_buf.resources | length > 0 }}"
    hive_server_client_tls_secret_exists: "{{ hive_server_client_tls_buf.resources is de***REMOVED***ned and hive_server_client_tls_buf.resources | length > 0 }}"
  when: meteringcon***REMOVED***g_tls_enabled

#
# Generate server and client certi***REMOVED***cates using the Ansible OpenSSL modules when top-level spec.tls.enabled is set to true
#
- name: Con***REMOVED***gure TLS and authentication for Hive
  block:
  - name: Generate certi***REMOVED***cates and keys for Hive
    include_tasks: con***REMOVED***gure_hive_openssl.yml

  - name: Con***REMOVED***gure Hive to use the generated TLS ***REMOVED***les
    set_fact:
      # hive.spec.metastore.con***REMOVED***g.tls
      _meteringcon***REMOVED***g_hive_metastore_server_ca_certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_tls_root_ca_certi***REMOVED***cate }}"
      _meteringcon***REMOVED***g_hive_metastore_server_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/hive_metastore_server.crt') + '\n' }}"
      _meteringcon***REMOVED***g_hive_metastore_server_key: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/hive_metastore_server.key') + '\n' }}"
    no_log: true
    when: not hive_metastore_tls_secret_exists

  - name: Con***REMOVED***gure Hive Server to use the generated server cert/key data
    set_fact:
      # hive.spec.server.con***REMOVED***g.tls
      _meteringcon***REMOVED***g_hive_server_ca_certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_tls_root_ca_certi***REMOVED***cate }}"
      _meteringcon***REMOVED***g_hive_server_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/hive_server.crt') + '\n' }}"
      _meteringcon***REMOVED***g_hive_server_key: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/hive_server.key') + '\n' }}"
    no_log: true
    when: not hive_server_tls_secret_exists

  - name: Con***REMOVED***gure Hive Server to use the generated client cert/key data
    set_fact:
      # hive.spec.server.con***REMOVED***g.metastoreTLS
      _meteringcon***REMOVED***g_hive_server_client_ca_certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_tls_root_ca_certi***REMOVED***cate }}"
      _meteringcon***REMOVED***g_hive_server_client_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/hive_server_client.crt') + '\n' }}"
      _meteringcon***REMOVED***g_hive_server_client_key: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/hive_server_client.key') + '\n' }}"
    no_log: true
    when: not hive_server_client_tls_secret_exists
  vars:
    hive_metastore_tls_secret_exists: "{{ hive_metastore_tls_buf.resources is de***REMOVED***ned and hive_metastore_tls_buf.resources | length > 0 }}"
    hive_server_tls_secret_exists: "{{ hive_server_tls_buf.resources is de***REMOVED***ned and hive_server_tls_buf.resources | length > 0 }}"
    hive_server_client_tls_secret_exists: "{{ hive_server_client_tls_buf.resources is de***REMOVED***ned and hive_server_client_tls_buf.resources | length > 0 }}"
  when: meteringcon***REMOVED***g_tls_enabled and (not hive_metastore_tls_secret_exists or not hive_server_tls_secret_exists or not hive_server_client_tls_secret_exists)
