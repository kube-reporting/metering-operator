---

- name: Validate user's Presto TLS con***REMOVED***guration
  include_tasks: validate_presto_tls.yml
  when: not meteringcon***REMOVED***g_tls_enabled

#
# Check for Presto TLS and auth secret existence (to avoid re-generating/overwriting the secret data if that secret name already exists)
#
- name: Check for the existence of the Presto TLS secret
  k8s_facts:
    api_version: v1
    kind: Secret
    name: "{{ meteringcon***REMOVED***g_spec.presto.spec.presto.con***REMOVED***g.tls.secretName }}"
    namespace: "{{ meta.namespace }}"
  no_log: true
  register: presto_secret_tls_buf
  when: meteringcon***REMOVED***g_tls_enabled

- name: Check for the existence of the Presto Auth secret
  k8s_facts:
    api_version: v1
    kind: Secret
    name: "{{ meteringcon***REMOVED***g_spec.presto.spec.presto.con***REMOVED***g.auth.secretName }}"
    namespace: "{{ meta.namespace }}"
  no_log: true
  register: presto_secret_auth_buf
  when: meteringcon***REMOVED***g_tls_enabled

#
# Generate server and client certi***REMOVED***cates using the Ansible OpenSSL modules when top-level spec.tls.enabled is set to true
#
- name: Con***REMOVED***gure TLS and client-side authentication for Presto and reporting-operator
  block:
  - name: Create temporary directory to store all the necessary certi***REMOVED***cates/keys
    temp***REMOVED***le:
      suf***REMOVED***x: certi***REMOVED***cates
      state: directory
    register: certi***REMOVED***cates_dir

  - name: Generate presto server and client TLS certi***REMOVED***cates and keys
    include_tasks: con***REMOVED***gure_presto_openssl.yml

  - name: Con***REMOVED***gure Presto to use generated TLS ***REMOVED***les
    set_fact:
      meteringcon***REMOVED***g_reporting_operator_presto_server_ca_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/ca.crt') + '\n' }}"

      meteringcon***REMOVED***g_presto_server_ca_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/ca.crt') + '\n' }}"
      meteringcon***REMOVED***g_presto_server_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/server.crt') + '\n' }}"
      meteringcon***REMOVED***g_presto_server_key: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/server.key') + '\n' }}"

      meteringcon***REMOVED***g_reporting_operator_presto_client_ca_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/ca.crt') + '\n' }}"
      meteringcon***REMOVED***g_reporting_operator_client_cert: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/client.crt') + '\n' }}"
      meteringcon***REMOVED***g_reporting_operator_client_key: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/client.key') + '\n' }}"

      meteringcon***REMOVED***g_presto_client_ca_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/ca.crt') + '\n' }}"
      meteringcon***REMOVED***g_presto_client_certi***REMOVED***cate: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/client.crt') + '\n' }}"
      meteringcon***REMOVED***g_presto_client_key: "{{ lookup('***REMOVED***le', '{{ certi***REMOVED***cates_dir.path }}/client.key') + '\n' }}"
    no_log: true
  always:
  - name: Cleanup the temporary directory which held the certi***REMOVED***cates and keys
    ***REMOVED***le:
      path: "{{ certi***REMOVED***cates_dir.path }}"
      state: absent
  when: meteringcon***REMOVED***g_tls_enabled and (presto_secret_tls_buf.resources | length == 0 or presto_secret_auth_buf.resources | length == 0)

#
# Update the MeteringCon***REMOVED***g values to use the pre-existing Presto TLS/auth secret data (when the secret already exists)
#
- name: Con***REMOVED***gure Presto to use existing server TLS secret data
  set_fact:
    meteringcon***REMOVED***g_presto_server_ca_certi***REMOVED***cate: "{{ presto_secret_tls_buf.resources[0].data['ca.crt'] | b64decode }}"
    meteringcon***REMOVED***g_presto_server_certi***REMOVED***cate: "{{ presto_secret_tls_buf.resources[0].data['tls.crt'] | b64decode }}"
    meteringcon***REMOVED***g_presto_server_key: "{{ presto_secret_tls_buf.resources[0].data['tls.key'] | b64decode }}"
  no_log: true
  when: meteringcon***REMOVED***g_tls_enabled and presto_secret_tls_buf.resources | length > 0

- name: Con***REMOVED***gure Presto to use existing client TLS secret data
  set_fact:
    meteringcon***REMOVED***g_presto_client_ca_certi***REMOVED***cate: "{{ presto_secret_auth_buf.resources[0].data['ca.crt'] | b64decode }}"
    meteringcon***REMOVED***g_presto_client_certi***REMOVED***cate: "{{ presto_secret_auth_buf.resources[0].data['tls.crt'] | b64decode }}"
    meteringcon***REMOVED***g_presto_client_key: "{{ presto_secret_auth_buf.resources[0].data['tls.key'] | b64decode }}"
  no_log: true
  when: meteringcon***REMOVED***g_tls_enabled and presto_secret_auth_buf.resources | length > 0
