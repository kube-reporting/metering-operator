apiVersion: metering.openshift.io/v1alpha1
kind: Metering
metadata:
  name: "operator-metering"
spec:
  reporting-operator:
    spec:
      con***REMOVED***g:
        # Replace these with your own AWS credentials
        awsAccessKeyID: "REPLACEME"
        awsSecretAccessKey: "REPLACEME"

        # uncomment the defaultReportDataSources section below to enable aws
        # billing.
        # defaultReportDataSources:
        #   aws-billing:
        #     spec:
        #       awsBilling:
        #         source:
        #           bucket: "your-aws-cost-report-bucket"
        #           pre***REMOVED***x: "path/to/report"
        #           region: "your-buckets-region"

        # If you want to use S3 for storage of reports, and collected metrics,
        # uncomment the section below, and set awsAccessKeyID and awsSecretAccessKey
        # for the reporting-operator, and presto con***REMOVED***g sections (above and below).
        # defaultStorage:
        #   create: true
        #   name: "s3"
        #   isDefault: true
        #   type: "hive"
        #   hive:
        #     tableProperties:
        #       location: "s3a://bucketName/pathInBucket"

  presto:
    spec:
      con***REMOVED***g:
        # Replace these with your own AWS credentials
        awsAccessKeyID: "REPLACEME"
        awsSecretAccessKey: "REPLACEME"

      # Uncomment the section below if you wish to adjust the resource limits and
      # requests. These examples use the defaults.

      # presto:
      #   coordinator:
      #     resources:
      #       requests:
      #         memory: "1536Mi"
      #         cpu: "300m"
      #       limits:
      #         memory: "2048Mi"
      #         cpu: "1000m"
      # hive:
      #   metastore:
      #     resources:
      #       requests:
      #         memory: "650Mi"
      #         cpu: "100m"
      #       limits:
      #         memory: "650Mi"
      #         cpu: "500m"
      #     storage:
      #       # Default is null, which means using the default storage class if it exists. If you wish to use a different storage class, specify it here
      #       class: null
      #       size: "5Gi"

      #   server:
      #     resources:
      #       requests:
      #         memory: "400Mi"
      #         cpu: "100m"
      #       limits:
      #         memory: "400Mi"
      #         cpu: "100m"

  # Uncomment the section below if you wish to adjust the resource limits and
  # requests. These examples use the defaults.

  # hdfs:
  #   spec:
  #     enabled: true
  #     datanode:
  #       resources:
  #         requests:
  #           memory: "250Mi"
  #           cpu: "250m"
  #         limits:
  #           memory: "250Mi"
  #           cpu: "250m"

  #       storage:
  #         # Default is null, which means using the default storage class if it exists. If you wish to use a different storage class, specify it here
  #         class: null
  #         size: "5Gi"

  #     namenode:
  #       resources:
  #         requests:
  #           memory: "350Mi"
  #           cpu: "250m"
  #         limits:
  #           memory: "350Mi"
  #           cpu: "250m"

  #       storage:
  #         size: "5Gi"
  #         class: null
