apiVersion: apps/v1
kind: Deployment
metadata:
  name: reporting-operator
  labels:
    app: reporting-operator
{{- block "extraMetadata" . }}
{{- end }}
spec:
  replicas: {{ .Values.spec.replicas }}
  strategy:
{{ toYaml .Values.spec.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app: reporting-operator
{{- if .Values.spec.labels }}
{{ toYaml .Values.spec.labels | indent 6 }}
{{- end }}
  template:
    metadata:
      labels:
        app: reporting-operator
{{- if .Values.spec.labels }}
{{ toYaml .Values.spec.labels | indent 8 }}
{{- end }}
      annotations:
        reporting-operator-con***REMOVED***g-hash: {{ include (print $.Template.BasePath "/reporting-operator-con***REMOVED***g.yaml") . | sha256sum }}
{{- if .Values.spec.con***REMOVED***g.createAwsCredentialsSecret }}
        reporting-operator-aws-credentials-secrets-hash: {{ include (print $.Template.BasePath "/reporting-operator-aws-credentials-secrets.yaml") . | sha256sum }}
{{- end }}
{{- if and .Values.spec.con***REMOVED***g.tls.enabled .Values.spec.con***REMOVED***g.tls.createSecret }}
        reporting-operator-tls-secrets-hash: {{ include (print $.Template.BasePath "/reporting-operator-tls-secrets.yaml") . | sha256sum }}
{{- end }}
{{- if and .Values.spec.authProxy.enabled .Values.spec.authProxy.createCookieSecret }}
        reporting-operator-auth-proxy-cookie-secrets-hash: {{ include (print $.Template.BasePath "/reporting-operator-auth-proxy-cookie-secret.yaml") . | sha256sum }}
{{- end }}
{{- if and .Values.spec.authProxy.enabled .Values.spec.authProxy.createHtpasswdSecret }}
        reporting-operator-auth-proxy-htpasswd-secrets-hash: {{ include (print $.Template.BasePath "/reporting-operator-auth-proxy-htpasswd-secret.yaml") . | sha256sum }}
{{- end }}
{{- if and .Values.spec.authProxy.enabled .Values.spec.authProxy.createAuthenticatedEmailsSecret }}
        reporting-operator-auth-proxy-authenticated-emails-secrets-hash: {{ include (print $.Template.BasePath "/reporting-operator-auth-proxy-authenticated-emails-secret.yaml") . | sha256sum }}
{{- end }}
{{- if .Values.spec.annotations }}
{{ toYaml .Values.spec.annotations | indent 8 }}
{{- end }}
    spec:
      securityContext:
        runAsNonRoot: true
{{- if .Values.spec.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.spec.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.spec.tolerations }}
      tolerations:
{{ toYaml .Values.spec.tolerations | indent 8 }}
{{- end }}
{{- if .Values.spec.af***REMOVED***nity }}
      af***REMOVED***nity:
{{ toYaml .Values.spec.af***REMOVED***nity | indent 8 }}
{{- end }}
      containers:
      - name: reporting-operator
        image: "{{ .Values.spec.image.repository }}:{{ .Values.spec.image.tag }}"
        imagePullPolicy: {{ .Values.spec.image.pullPolicy }}
        env:
        - name: POD_NAME
          valueFrom:
            ***REMOVED***eldRef:
              ***REMOVED***eldPath: metadata.name
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.spec.con***REMOVED***g.awsCredentialsSecretName }}"
              key: aws-access-key-id
              optional: true
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.spec.con***REMOVED***g.awsCredentialsSecretName }}"
              key: aws-secret-access-key
              optional: true
        - name: REPORTING_OPERATOR_LOG_LEVEL
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: log-level
        - name: REPORTING_OPERATOR_LOG_DML_QUERIES
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: log-dml-queries
        - name: REPORTING_OPERATOR_LOG_DDL_QUERIES
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: log-ddl-queries
        - name: REPORTING_OPERATOR_LOG_REPORT
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: log-reports
        - name: REPORTING_OPERATOR_PROMETHEUS_HOST
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: prometheus-url
        - name: REPORTING_OPERATOR_PROMSUM_INTERVAL
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: promsum-poll-interval
              optional: true
        - name: REPORTING_OPERATOR_PROMSUM_CHUNK_SIZE
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: promsum-chunk-size
              optional: true
        - name: REPORTING_OPERATOR_PROMSUM_STEP_SIZE
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: promsum-step-size
              optional: true
        - name: REPORTING_OPERATOR_DISABLE_PROMSUM
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: disable-promsum
        - name: REPORTING_OPERATOR_ENABLE_FINALIZERS
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: enable-***REMOVED***nalizers
        - name: REPORTING_OPERATOR_PRESTO_MAX_QUERY_LENGTH
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: presto-max-query-length
              optional: true
        - name: REPORTING_OPERATOR_PROMETHEUS_DATASOURCE_MAX_QUERY_RANGE_DURATION
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: prometheus-datasource-max-query-range-duration
              optional: true
        - name: REPORTING_OPERATOR_PROMETHEUS_DATASOURCE_MAX_IMPORT_BACKFILL_DURATION
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: prometheus-datasource-max-import-back***REMOVED***ll-duration
              optional: true
        - name: REPORTING_OPERATOR_PROMETHEUS_DATASOURCE_IMPORT_FROM
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: prometheus-datasource-import-from
              optional: true
        - name: REPORTING_OPERATOR_PROMETHEUS_BEARER_TOKEN_FILE
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: prometheus-bearer-token-***REMOVED***le
              optional: true
{{- if .Values.spec.con***REMOVED***g.prometheusCAFile }}
        - name: REPORTING_OPERATOR_PROMETHEUS_CA_FILE
          value: {{ .Values.spec.con***REMOVED***g.prometheusCAFile }}
{{- end }}
        - name: REPORTING_OPERATOR_PRESTO_HOST
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: presto-host
        - name: REPORTING_OPERATOR_HIVE_HOST
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: hive-host
        - name: REPORTING_OPERATOR_LEASE_DURATION
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: leader-lease-duration
{{- if .Values.spec.con***REMOVED***g.tls.enabled }}
        - name: REPORTING_OPERATOR_TLS_KEY
          value: "/tls/tls.key"
        - name: REPORTING_OPERATOR_TLS_CERT
          value: "/tls/tls.crt"
{{/* If authProxy is enabled we do not enable TLS on the reporting-operator operator since the proxy will do TLS */}}
{{- if .Values.spec.authProxy.enabled }}
        - name: REPORTING_OPERATOR_USE_TLS
          value: "false"
{{- ***REMOVED*** }}
        - name: REPORTING_OPERATOR_USE_TLS
          value: "true"
{{- end }}
{{- end }}
{{- if .Values.spec.con***REMOVED***g.metricsTLS.enabled }}
        - name: REPORTING_OPERATOR_METRICS_TLS_KEY
          value: "/metrics-tls/tls.key"
        - name: REPORTING_OPERATOR_METRICS_TLS_CERT
          value: "/metrics-tls/tls.crt"
        - name: REPORTING_OPERATOR_METRICS_USE_TLS
          value: "true"
{{- end }}
        - name: REPORTING_OPERATOR_ALL_NAMESPACES
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: all-namespaces
              optional: true
        - name: REPORTING_OPERATOR_TARGET_NAMESPACES
          valueFrom:
            con***REMOVED***gMapKeyRef:
              name: reporting-operator-con***REMOVED***g
              key: target-namespaces
              optional: true
        resources:
{{ toYaml .Values.spec.resources | indent 10 }}
        ports:
        - name: "http"
          containerPort: 8080
        - name: "pprof"
          containerPort: 6060
        - name: "metrics"
          containerPort: 8082
{{- if and .Values.spec.con***REMOVED***g.tls.enabled (not .Values.spec.authProxy.enabled) -}}
{{- $_ := set .Values.spec.readinessProbe.httpGet "scheme" "HTTPS" -}}
{{- $_ := set .Values.spec.livenessProbe.httpGet "scheme" "HTTPS" -}}
{{- end }}
        readinessProbe:
{{ toYaml .Values.spec.readinessProbe | indent 10 }}
        livenessProbe:
{{ toYaml .Values.spec.livenessProbe | indent 10 }}
{{- if .Values.spec.con***REMOVED***g.tls.enabled }}
        volumeMounts:
        - name: api-tls
          mountPath: /tls
        - name: metrics-tls
          mountPath: /metrics-tls
{{- end }}
{{- if .Values.spec.authProxy.enabled }}
      - name: reporting-operator-auth-proxy
        image: "{{ .Values.spec.authProxy.image.repository }}:{{ .Values.spec.authProxy.image.tag }}"
        imagePullPolicy: {{ .Values.spec.authProxy.image.pullPolicy }}
        env:
        - name: NAMESPACE
          valueFrom:
            ***REMOVED***eldRef:
              ***REMOVED***eldPath: metadata.namespace
        args:
        - -provider=openshift
        - -https-address=:8081
        - -http-address=
        - -upstream=http://localhost:8080
        - -htpasswd-***REMOVED***le=/etc/proxy/htpasswd/auth
        - -tls-cert=/etc/tls/tls.crt
        - -tls-key=/etc/tls/tls.key
        - -client-secret-***REMOVED***le=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret-***REMOVED***le=/etc/proxy/cookie-secret/cookie-secret-seed
        - -request-logging=true
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - -openshift-service-account=reporting-operator
{{- if .Values.spec.authProxy.authenticatedEmailsEnabled }}
        - -authenticated-emails-***REMOVED***le=/etc/proxy/authenticated-emails/emails
{{- ***REMOVED*** }}
        - -email-domain=*
{{- end }}
{{- if .Values.spec.authProxy.subjectAccessReviewEnabled }}
        - '-openshift-sar={{- .Values.spec.authProxy.subjectAccessReviewPolicy | trim -}}'
{{- end }}
{{- if .Values.spec.authProxy.delegateURLsEnabled }}
        - '-openshift-delegate-urls={{- .Values.spec.authProxy.delegateURLsPolicy | trim -}}'
{{- end }}
        ports:
        - name: auth-proxy
          containerPort: 8081
        resources:
{{ toYaml .Values.spec.authProxy.resources | indent 10 }}
        volumeMounts:
        - mountPath: /etc/tls
          name: api-tls
        - mountPath: /etc/proxy/cookie-secret
          name: cookie-secret
        - mountPath: /etc/proxy/htpasswd
          name: htpasswd-secret
{{- if .Values.spec.authProxy.authenticatedEmailsEnabled  }}
        - mountPath: /etc/proxy/authenticated-emails
          name: authenticated-emails-secret
{{- end }}
{{- end }}
      volumes:
{{- if .Values.spec.con***REMOVED***g.tls.enabled }}
      - name: api-tls
        secret:
          secretName: {{ .Values.spec.con***REMOVED***g.tls.secretName }}
{{- end }}
{{- if .Values.spec.con***REMOVED***g.metricsTLS.enabled }}
      - name: metrics-tls
        secret:
          secretName: {{ .Values.spec.con***REMOVED***g.metricsTLS.secretName }}
{{- end }}
{{- if .Values.spec.authProxy.enabled }}
      - name: cookie-secret
        secret:
          secretName: {{ .Values.spec.authProxy.cookieSecretName }}
      - name: htpasswd-secret
        secret:
          secretName: {{ .Values.spec.authProxy.htpasswdSecretName }}
{{- if .Values.spec.authProxy.authenticatedEmailsEnabled  }}
      - name: authenticated-emails-secret
        secret:
          secretName: {{ .Values.spec.authProxy.authenticatedEmailsSecretName }}
{{- end }}
{{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccount: reporting-operator
{{- if .Values.spec.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.spec.imagePullSecrets | indent 8 }}
{{- end }}
