---

#
# Validate the user-provided cert/key/caCert ***REMOVED***elds are non-empty when top-level spec.tls.enabled is false
#
- name: Validate that the user-provided Presto server TLS ***REMOVED***elds are not empty
  block:
  - name: Validate that the user provided a non-empty TLS certi***REMOVED***cate value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.tls.certi***REMOVED***cate == ""
      msg: "presto.spec.con***REMOVED***g.tls.certi***REMOVED***cate cannot be empty if createSecret: true and secretName != ''"

  - name: Validate that the user provided a non-empty TLS CA certi***REMOVED***cate value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.tls.caCerti***REMOVED***cate == ""
      msg: "presto.spec.con***REMOVED***g.tls.caCerti***REMOVED***cate cannot be empty if createSecret: true and secretName != ''"

  - name: Validate that the user provided a non-empty TLS key value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.tls.key == ""
      msg: "presto.spec.con***REMOVED***g.tls.key cannot be empty if createSecret: true and secretName != ''"
  when: meteringcon***REMOVED***g_template_presto_tls_secret

- name: Validate that the user-provided Presto client Auth ***REMOVED***elds are not empty
  block:
  - name: Validate that the user provided a non-empty auth certi***REMOVED***cate value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.auth.certi***REMOVED***cate == ""
      msg: "presto.spec.con***REMOVED***g.auth.certi***REMOVED***cate cannot be empty if createSecret: true and secretName != ''"

  - name: Validate that the user provided a non-empty auth CA certi***REMOVED***cate value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.auth.caCerti***REMOVED***cate == ""
      msg: "presto.spec.con***REMOVED***g.auth.caCerti***REMOVED***cate cannot be empty if createSecret: true and secretName != ''"

  - name: Validate that the user provided a non-empty auth key value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.auth.key == ""
      msg: "presto.spec.con***REMOVED***g.auth.key cannot be empty if createSecret: true and secretName != ''"

  - name: Validate that TLS is enabled when auth is enabled
    assert:
      that:
        - not meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.tls.enabled and meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.auth.enabled
      msg: "Invalid con***REMOVED***guration: you cannot enable auth but disable TLS."
  when: meteringcon***REMOVED***g_template_presto_auth_secret

- name: Validate that the user provided Presto/Hive client TLS ***REMOVED***elds are not empty
  block:
  - name: Validate that the user provided a non-empty Hive client TLS certi***REMOVED***cate value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.connectors.hive.tls.certi***REMOVED***cate != ""
      msg: "spec.presto.spec.con***REMOVED***g.connectors.hive.tls.certi***REMOVED***cate cannot be empty when createSecret is set to true"

  - name: Validate that the user provided a non-empty Hive client TLS key value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.connectors.hive.tls.key != ""
      msg: "spec.presto.spec.con***REMOVED***g.connectors.hive.tls.key cannot be empty when createSecret is set to true"

  - name: Validate that the user provided a non-empty Hive client TLS CA certi***REMOVED***cate value
    assert:
      that:
        - meteringcon***REMOVED***g_spec.presto.spec.con***REMOVED***g.connectors.hive.tls.caCerti***REMOVED***cate != ""
      msg: "spec.presto.spec.con***REMOVED***g.connectors.hive.tls.caCerti***REMOVED***cate cannot be empty when createSecret is set to true"
  when: meteringcon***REMOVED***g_template_presto_hive_tls_secret
