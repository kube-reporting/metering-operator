{{- if index .Values.spec.con***REMOVED***g.defaultReportDataSources "aws-billing" -}}
apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: "aws-ec2-billing-data-raw"
  labels:
    operator-metering: "true"
{{- block "extraMetadata" . }}
{{- end }}
spec:
  reportDataSources:
  - "aws-billing"
  reportQueries:
  - "node-memory-allocatable"
  columns:
  - name: resource_id
    type: string
  - name: usage_start_date
    type: timestamp
  - name: usage_end_date
    type: timestamp
  - name: period_cost
    type: double
  - name: partition_start
    type: string
  - name: partition_stop
    type: string
  query: |
    WITH resource_id_list AS (
      SELECT resource_id
      FROM {| generationQueryViewName "node-memory-allocatable" |}
      GROUP BY resource_id
    )
    SELECT lineItem_resourceId as resource_id,
           lineItem_UsageStartDate as usage_start_date,
           lineItem_UsageEndDate as usage_end_date,
           lineItem_BlendedCost as period_cost,
           billing_period_start as partition_start,
           billing_period_end as partition_stop
    FROM {| dataSourceTableName "aws-billing" |} as aws_billing
    INNER JOIN resource_id_list
    ON aws_billing.lineItem_resourceId = resource_id_list.resource_id
    WHERE position('.csv' IN aws_billing."$path") != 0 -- This prevents JSON manifest ***REMOVED***les from being loaded.
    AND lineitem_productcode = 'AmazonEC2'
    AND lineItem_operation LIKE 'RunInstances%'
    AND lineItem_UsageStartDate IS NOT NULL
    AND lineItem_UsageEndDate IS NOT NULL

---
apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: "aws-ec2-billing-data"
  labels:
    operator-metering: "true"
{{- block "extraMetadata" . }}
{{- end }}
spec:
  reportQueries:
  - "aws-ec2-billing-data-raw"
  view:
    disabled: true
  columns:
  - name: resource_id
    type: string
  - name: usage_start_date
    type: timestamp
  - name: usage_end_date
    type: timestamp
  - name: period_cost
    type: double
  - name: partition_start
    type: string
  - name: partition_stop
    type: string
  - name: period_percent
    type: double
  - name: period_start
    type: timestamp
    unit: date
  - name: period_end
    type: timestamp
    unit: date
  query: |
        SELECT aws_billing.*,
               CASE
                   -- AWS data covers entire reporting period
                   WHEN (aws_billing.usage_start_date <= timestamp '{| .Report.StartPeriod | prestoTimestamp |}') AND ( timestamp '{| .Report.EndPeriod | prestoTimestamp |}' <= aws_billing.usage_end_date)
                       THEN cast(date_diff('millisecond', timestamp '{| .Report.StartPeriod | prestoTimestamp |}', timestamp '{| .Report.EndPeriod | prestoTimestamp |}') as double) / cast(date_diff('millisecond', aws_billing.usage_start_date, aws_billing.usage_end_date) as double)

                   -- AWS data covers start to middle
                   WHEN (aws_billing.usage_start_date <= timestamp '{| .Report.StartPeriod | prestoTimestamp |}')
                       THEN cast(date_diff('millisecond', timestamp '{| .Report.StartPeriod | prestoTimestamp |}', aws_billing.usage_end_date) as double) / cast(date_diff('millisecond', aws_billing.usage_start_date, aws_billing.usage_end_date) as double)

                   -- AWS data covers middle to end
                   WHEN ( timestamp '{| .Report.EndPeriod | prestoTimestamp |}' <= aws_billing.usage_end_date)
                       THEN cast(date_diff('millisecond', aws_billing.usage_start_date, timestamp '{| .Report.EndPeriod | prestoTimestamp |}') as double) / cast(date_diff('millisecond', aws_billing.usage_start_date, aws_billing.usage_end_date) as double)
                   ELSE 1
               END as period_percent,
               timestamp '{| .Report.StartPeriod| prestoTimestamp |}' AS period_start,
               timestamp '{| .Report.EndPeriod | prestoTimestamp |}' AS period_end
        FROM {| generationQueryViewName "aws-ec2-billing-data-raw" |} as aws_billing

        -- make sure the partition overlaps with our range
        WHERE (partition_stop >= '{| .Report.StartPeriod | billingPeriodTimestamp |}' AND partition_start <= '{| .Report.EndPeriod | billingPeriodTimestamp |}')

        -- make sure lineItem entries overlap with our range
        AND (usage_end_date >= timestamp '{| .Report.StartPeriod | prestoTimestamp |}' AND usage_start_date <= timestamp '{| .Report.EndPeriod | prestoTimestamp |}')

---
apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: "aws-ec2-cluster-cost"
  labels:
    operator-metering: "true"
{{- block "extraMetadata" . }}
{{- end }}
spec:
  dynamicReportQueries:
  - "aws-ec2-billing-data"
  view:
    disabled: true
  columns:
  - name: data_start
    type: timestamp
  - name: data_stop
    type: timestamp
  - name: cluster_cost
    type: double
  query: |
    WITH aws_billing_***REMOVED***ltered AS (
      {| renderReportGenerationQuery "aws-ec2-billing-data" . |}
    )
    SELECT
        min(usage_start_date) as data_start,
        max(usage_end_date) as data_stop,
        sum(period_cost * period_percent) as cluster_cost
    FROM aws_billing_***REMOVED***ltered
{{- end -}}
