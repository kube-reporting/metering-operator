---

meteringcon***REMOVED***g_chart_path: "{{ lookup('env','HELM_CHART_PATH') }}"
meteringcon***REMOVED***g_prune_label_key: 'metering.openshift.io/prune'
meteringcon***REMOVED***g_prune_namespace_label_key: 'metering.openshift.io/ns-prune'

meteringcon***REMOVED***g_default_values_***REMOVED***le: "{{ meteringcon***REMOVED***g_chart_path + '/values.yaml' }}"
meteringcon***REMOVED***g_default_values: "{{ lookup('***REMOVED***le', meteringcon***REMOVED***g_default_values_***REMOVED***le) | from_yaml }}"

# contains the users overrides
meteringcon***REMOVED***g_spec_overrides: "{{ _metering_openshift_io_meteringcon***REMOVED***g.spec }}"

# The default specs for each component
_storage_defaults: "{{ meteringcon***REMOVED***g_default_values.storage }}"
_presto_default_spec: "{{ meteringcon***REMOVED***g_default_values.presto.spec }}"
_reporting_op_default_spec: "{{ meteringcon***REMOVED***g_default_values['reporting-operator'].spec }}"
_hadoop_default_spec: "{{ meteringcon***REMOVED***g_default_values.hadoop.spec }}"

# Default image repository and tag from the defaults
meteringcon***REMOVED***g_reporting_operator_default_image_repo: "{{ _reporting_op_default_spec.image.repository }}"
meteringcon***REMOVED***g_reporting_operator_default_image_tag: "{{ _reporting_op_default_spec.image.tag }}"
meteringcon***REMOVED***g_presto_default_image_repo: "{{ _presto_default_spec.presto.image.repository }}"
meteringcon***REMOVED***g_presto_default_image_tag: "{{ _presto_default_spec.presto.image.tag }}"
meteringcon***REMOVED***g_hive_default_image_repo: "{{ _presto_default_spec.hive.image.repository }}"
meteringcon***REMOVED***g_hive_default_image_tag: "{{ _presto_default_spec.hive.image.tag }}"
meteringcon***REMOVED***g_hadoop_default_image_repo: "{{ _hadoop_default_spec.image.repository }}"
meteringcon***REMOVED***g_hadoop_default_image_tag: "{{ _hadoop_default_spec.image.tag }}"

# Override the default images we use with env vars if set, falling back to the values.yaml con***REMOVED***gured default if not set.
meteringcon***REMOVED***g_default_image_overrides:
  reporting-operator:
    spec:
      image:
        repository: "{{ lookup('env','METERING_REPORTING_OPERATOR_IMAGE').split(':')[0] | default(meteringcon***REMOVED***g_reporting_operator_default_image_repo, true) }}"
        tag: "{{ lookup('env','METERING_REPORTING_OPERATOR_IMAGE').split(':')[1] | default(meteringcon***REMOVED***g_reporting_operator_default_image_tag, true) }}"
  presto:
    spec:
      presto:
        image:
          repository: "{{ lookup('env','METERING_PRESTO_IMAGE').split(':')[0] | default(meteringcon***REMOVED***g_presto_default_image_repo, true) }}"
          tag: "{{ lookup('env','METERING_PRESTO_IMAGE').split(':')[1] | default(meteringcon***REMOVED***g_presto_default_image_tag, true) }}"
      hive:
        image:
          repository: "{{ lookup('env','METERING_HIVE_IMAGE').split(':')[0] | default(meteringcon***REMOVED***g_hive_default_image_repo, true) }}"
          tag: "{{ lookup('env','METERING_HIVE_IMAGE').split(':')[1] | default(meteringcon***REMOVED***g_hive_default_image_tag, true) }}"
  hadoop:
    spec:
      image:
        repository: "{{ lookup('env','METERING_HADOOP_IMAGE').split(':')[0] | default(meteringcon***REMOVED***g_hadoop_default_image_repo, true) }}"
        tag: "{{ lookup('env','METERING_HADOOP_IMAGE').split(':')[1] | default(meteringcon***REMOVED***g_hadoop_default_image_tag, true) }}"

_storage_overrides:
  s3:
    reporting-operator:
      spec:
        con***REMOVED***g:
          awsCredentialsSecretName: "{{ _storage_defaults | json_query('hive.s3.awsCredentialsSecretName') }}"
          createAwsCredentialsSecret: false
    presto:
      spec:
        con***REMOVED***g:
          awsCredentialsSecretName: "{{ _storage_defaults | json_query('hive.s3.awsCredentialsSecretName') }}"
          createAwsCredentialsSecret: false
        hive:
          con***REMOVED***g:
            metastoreWarehouseDir: "s3a://{{ _storage_defaults | json_query('hive.s3.bucket') }}"
    hadoop:
      spec:
        con***REMOVED***g:
          defaultFS: "s3a://{{ _storage_defaults | json_query('hive.s3.bucket') }}"
        hdfs:
          enabled: false

  hdfs:
    hadoop:
      spec:
        con***REMOVED***g:
          defaultFS: "hdfs://{{ _storage_defaults | json_query('hive.hdfs.namenode') | default('hdfs-namenode-0.hdfs-namenode:9820', true) }}"
        hdfs:
          enabled: "{{ meteringcon***REMOVED***g_spec_overrides | json_query('unsupportedFeatures.enableHDFS') | default(false, true) }}"

  sharedPVC:
    presto:
      spec:
        con***REMOVED***g:
          sharedVolume:
            enabled: true
            createPVC: "{{ _storage_defaults | json_query('hive.sharedPVC.createPVC') | default(false, true) }}"
            mountPath: "{{ _storage_defaults | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"
            claimName: "{{ _storage_defaults | json_query('hive.sharedPVC.claimName') | default(_presto_default_spec.con***REMOVED***g.sharedVolume.claimName, true) }}"
            size: "{{ _storage_defaults | json_query('hive.sharedPVC.size') | default(_presto_default_spec.con***REMOVED***g.sharedVolume.size, true) }}"
            storageClass: "{{ _storage_defaults | json_query('hive.sharedPVC.storageClass') | default(_presto_default_spec.con***REMOVED***g.sharedVolume.storageClass, true) }}"
        hive:
          con***REMOVED***g:
            metastoreWarehouseDir: "{{ _storage_defaults | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"

    hadoop:
      spec:
        con***REMOVED***g:
          defaultFS: "***REMOVED***le://{{ _storage_defaults | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"
        hdfs:
          enabled: false

meteringcon***REMOVED***g_storage_hive_storage_type: "{{ meteringcon***REMOVED***g_default_values | combine(meteringcon***REMOVED***g_spec_overrides, recursive=True) | json_query('storage.hive.type') }}"
meteringcon***REMOVED***g_storage_overrides: "{{ _storage_overrides[meteringcon***REMOVED***g_storage_hive_storage_type] | default({}, true) }}"

#
# Override the default values with _tls_overrides when spec.tls.enabled is set to true, ***REMOVED*** use values.yaml and meteringcon***REMOVED***g_spec_overrides
#
meteringcon***REMOVED***g_reporting_operator_presto_server_ca_certi***REMOVED***cate: ""
meteringcon***REMOVED***g_reporting_operator_presto_server_secret_name: "reporting-operator-presto-server-tls"

meteringcon***REMOVED***g_reporting_operator_presto_client_secret_name: "reporting-operator-presto-client-tls"
meteringcon***REMOVED***g_reporting_operator_client_cert: ""
meteringcon***REMOVED***g_reporting_operator_presto_client_ca_certi***REMOVED***cate: ""
meteringcon***REMOVED***g_reporting_operator_client_key: ""

meteringcon***REMOVED***g_presto_server_secret_name: "presto-server-tls"
meteringcon***REMOVED***g_presto_server_ca_certi***REMOVED***cate: ""
meteringcon***REMOVED***g_presto_server_certi***REMOVED***cate: ""
meteringcon***REMOVED***g_presto_server_key: ""

meteringcon***REMOVED***g_presto_client_secret_name: "presto-client-tls"
meteringcon***REMOVED***g_presto_client_ca_certi***REMOVED***cate: ""
meteringcon***REMOVED***g_presto_client_certi***REMOVED***cate: ""
meteringcon***REMOVED***g_presto_client_key: ""

_tls_overrides:
  reporting-operator:
    spec:
      con***REMOVED***g:
        prestoTLS:
          enabled: true
          createSecret: true
          secretName: "{{ meteringcon***REMOVED***g_reporting_operator_presto_server_secret_name }}"
          caCerti***REMOVED***cate: "{{ meteringcon***REMOVED***g_reporting_operator_presto_server_ca_certi***REMOVED***cate }}"

        prestoAuth:
          enabled: true
          createSecret: true
          secretName: "{{ meteringcon***REMOVED***g_reporting_operator_presto_client_secret_name }}"
          certi***REMOVED***cate: "{{ meteringcon***REMOVED***g_reporting_operator_client_cert }}"
          key: "{{ meteringcon***REMOVED***g_reporting_operator_client_key }}"
          caCerti***REMOVED***cate: "{{ meteringcon***REMOVED***g_reporting_operator_presto_client_ca_certi***REMOVED***cate }}"
  presto:
    spec:
      presto:
        con***REMOVED***g:
          tls:
            certi***REMOVED***cate: "{{  meteringcon***REMOVED***g_presto_server_certi***REMOVED***cate }}"
            key: "{{ meteringcon***REMOVED***g_presto_server_key }}"
            caCerti***REMOVED***cate: "{{ meteringcon***REMOVED***g_presto_server_ca_certi***REMOVED***cate }}"

            enabled: true
            createSecret: true
            secretName: "{{ meteringcon***REMOVED***g_presto_server_secret_name }}"
          auth:
            certi***REMOVED***cate: "{{  meteringcon***REMOVED***g_presto_client_certi***REMOVED***cate }}"
            key: "{{ meteringcon***REMOVED***g_presto_client_key }}"
            caCerti***REMOVED***cate: "{{ meteringcon***REMOVED***g_presto_client_ca_certi***REMOVED***cate }}"

            enabled: true
            createSecret: true
            secretName: "{{ meteringcon***REMOVED***g_presto_client_secret_name }}"

# check if the user's spec contains the top-level tls.enabled ***REMOVED***eld. if true, use the value stored in that ***REMOVED***eld, ***REMOVED*** default to the value stored in values.yaml
meteringcon***REMOVED***g_tls_enabled: "{{ meteringcon***REMOVED***g_default_values | combine(meteringcon***REMOVED***g_spec_overrides, recursive=True) | json_query('tls.enabled') }}"
meteringcon***REMOVED***g_tls_overrides: "{{ meteringcon***REMOVED***g_tls_enabled | ternary(_tls_overrides, {}) }}"
# combine the meteringcon***REMOVED***g_tls_overrides dictionary last to enforce when spec.tls.enabled is speci***REMOVED***ed and set to true
meteringcon***REMOVED***g_spec: "{{ meteringcon***REMOVED***g_default_values | combine(meteringcon***REMOVED***g_default_image_overrides, meteringcon***REMOVED***g_storage_overrides, meteringcon***REMOVED***g_spec_overrides, meteringcon***REMOVED***g_tls_overrides, recursive=True) }}"

meteringcon***REMOVED***g_storage_s3_create_bucket: "{{ meteringcon***REMOVED***g_spec | json_query('storage.hive.s3.createBucket') | default(true, true) }}"
# Intentionally an invalid default name to ensure that this is overridden, and obvious when it's not.
_default_metering_bucket_name: "-uncon***REMOVED***gured-metering-bucket-name-"
meteringcon***REMOVED***g_storage_s3_bucket_name: "{{ (meteringcon***REMOVED***g_spec | json_query('storage.hive.s3.bucket') | default(_default_metering_bucket_name, true)).split('/')[0] }}"
meteringcon***REMOVED***g_storage_s3_bucket_region: "{{ meteringcon***REMOVED***g_spec | json_query('storage.hive.s3.region') | default(omit, true) }}"
meteringcon***REMOVED***g_storage_s3_aws_credentials_secret_name: "{{ meteringcon***REMOVED***g_spec | json_query('storage.hive.s3.awsCredentialsSecretName') | default(omit, true) }}"

########################
# All Variables below are setup to consume the result of merging the defaults, internal overrides, and user overrides.
########################

# Private variables to reduce boilerplate
_monitoring_conf: "{{ meteringcon***REMOVED***g_spec.monitoring }}"
_openshift_reporting_spec: "{{ meteringcon***REMOVED***g_spec['openshift-reporting'].spec }}"
_presto_spec: "{{ meteringcon***REMOVED***g_spec.presto.spec }}"
_reporting_op_spec: "{{ meteringcon***REMOVED***g_spec['reporting-operator'].spec }}"
_hadoop_spec: "{{ meteringcon***REMOVED***g_spec.hadoop.spec }}"

meteringcon***REMOVED***g_create_metering_default_storage: "{{ _openshift_reporting_spec.defaultStorageLocation.create | default(true) }}"

meteringcon***REMOVED***g_create_metering_monitoring_resources: "{{ _monitoring_conf.enabled | default(true) }}"
meteringcon***REMOVED***g_create_metering_monitoring_rbac: "{{ _monitoring_conf.enabled and _monitoring_conf.enabled and _monitoring_conf.createRBAC | default(true) }}"

meteringcon***REMOVED***g_enable_reporting_aws_billing: "{{ _openshift_reporting_spec.awsBillingReportDataSource.enabled | default(false) }}"

meteringcon***REMOVED***g_enable_hdfs: "{{ _hadoop_spec.hdfs.enabled | default(true) }}"
meteringcon***REMOVED***g_create_hadoop_aws_credentials: "{{ _hadoop_spec.con***REMOVED***g.aws.createCredentialsSecret | default(false) }}"

meteringcon***REMOVED***g_create_hive_metastore_pvc: "{{ _presto_spec.hive.metastore.storage.create | default(true) }}"
meteringcon***REMOVED***g_create_presto_shared_volume_pvc: "{{ _presto_spec.con***REMOVED***g.sharedVolume.enabled and _presto_spec.con***REMOVED***g.sharedVolume.createPVC | default(false) }}"
meteringcon***REMOVED***g_create_presto_aws_credentials: "{{ _presto_spec.con***REMOVED***g.createAwsCredentialsSecret | default(false) }}"

#
# Enabling Presto TLS/Auth by Default
#
meteringcon***REMOVED***g_template_presto_tls_secret: "{{ _presto_spec.presto.con***REMOVED***g.tls.enabled and _presto_spec.presto.con***REMOVED***g.tls.createSecret and _presto_spec.presto.con***REMOVED***g.tls.secretName != 'presto-server-tls' }}"
meteringcon***REMOVED***g_template_presto_auth_secret: "{{ _presto_spec.presto.con***REMOVED***g.auth.enabled and _presto_spec.presto.con***REMOVED***g.auth.createSecret and _presto_spec.presto.con***REMOVED***g.auth.secretName != 'presto-client-tls' }}"
meteringcon***REMOVED***g_create_presto_tls_secrets: "{{ _presto_spec.presto.con***REMOVED***g.tls.enabled and _presto_spec.presto.con***REMOVED***g.tls.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_presto_auth_secrets: "{{ _presto_spec.presto.con***REMOVED***g.auth.enabled and _presto_spec.presto.con***REMOVED***g.auth.createSecret | default(false) }}"

#
# Reporting Operator
#
meteringcon***REMOVED***g_create_reporting_operator_auth_proxy_cookie_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.createCookieSecret | default(true) }}"
meteringcon***REMOVED***g_create_reporting_operator_auth_proxy_htpasswd_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.createHtpasswdSecret | default(true) }}"
meteringcon***REMOVED***g_create_reporting_operator_auth_proxy_authenticated_emails_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.createAuthenticatedEmailsSecret | default(true) }}"
meteringcon***REMOVED***g_create_reporting_operator_auth_proxy_rbac: "{{ _reporting_op_spec.authProxy.enabled and (_reporting_op_spec.authProxy.subjectAccessReviewEnabled and _reporting_op_spec.authProxy.delegateURLsEnabled) | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_prometheus_bearer_token: "{{ _reporting_op_spec.con***REMOVED***g.prometheusImporter.auth.tokenSecret.create | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_prometheus_certi***REMOVED***cate_authority: "{{ _reporting_op_spec.con***REMOVED***g.prometheusCerti***REMOVED***cateAuthority.con***REMOVED***gMap.create | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_aws_credentials: "{{ _reporting_op_spec.con***REMOVED***g.createAwsCredentialsSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_presto_tls_secrets: "{{ _reporting_op_spec.con***REMOVED***g.prestoTLS.enabled and _reporting_op_spec.con***REMOVED***g.prestoTLS.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_presto_auth_secrets: "{{ _reporting_op_spec.con***REMOVED***g.prestoAuth.enabled and _reporting_op_spec.con***REMOVED***g.prestoAuth.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_tls_secrets: "{{ _reporting_op_spec.con***REMOVED***g.tls.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_route: "{{ _reporting_op_spec.route.enabled | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_cluster_monitoring_view_rbac: "{{ _reporting_op_spec.con***REMOVED***g.createClusterMonitoringViewRBAC | default(true) }}"
