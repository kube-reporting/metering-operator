apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: metering-operator.v0.13.0-latest
  namespace: placeholder
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "metering.openshift.io/v1alpha1",
          "kind": "Metering",
          "metadata": {
            "name": "operator-metering"
          },
          "spec": {}
        }
      ]
    categories: OpenShift Optional, Monitoring
    certi***REMOVED***ed: "false"
    containerImage: quay.io/coreos/metering-helm-operator:0.13.0-latest
    createdAt: 2019-01-01T11:59:59Z
    description: Chargeback and reporting tool to provide accountability for how resources
      are used across a cluster
    support: Red Hat, Inc.

spec:
  displayName: Metering
  description: |
    Operator Metering is a chargeback and reporting tool to provide accountability for how resources are used across a cluster. Cluster admins can schedule reports based on historical usage data by Pod, Namespace, and Cluster wide. Operator Metering is part of the [Operator Framework](https://coreos.com/blog/introducing-operator-framework-metering).

    Read the user guide for more details on [running and viewing your ***REMOVED***rst report](https://github.com/operator-framework/operator-metering/blob/master/Documentation/using-metering.md).

    ### Core capabilities

    * **Chargeback/Showback** - Break down the reserved and utlized resources requested by applications.

    * **Pod, Namespace & Cluster Reports** - Built in reports exist to break down CPU and RAM in any way you desire.

    * **Scheduled Reports** - Schedule reports to run on a standard interval, eg. daily or monthly

    * **Post-Processing** - Reports are generated in CSV format and stored in persistent storage for further post-processing. Use this to send reminder emails, integrate into your ERP system, or graph on a dashboard.

    * **HTTP API** - Reports can be queried from an in-cluster HTTP API in addition to reading from persistent storage.

    ### Before you start

    Metering runs a big data stack to crunch your data and requires at least 4GB of RAM and 4 CPU cores. At least one Node should have 2GB of RAM and 2 CPU cores. Memory and CPU consumption may often be lower, but will spike when running reports, or collecting data for larger clusters.

    ### Common Con***REMOVED***gurations

    Metering works out of the box without any customizations or con***REMOVED***guration. Read the [full documentation](https://github.com/operator-framework/operator-metering/blob/master/Documentation/metering-con***REMOVED***g.md) for more details.

    * **Use a speci***REMOVED***c StorageClass** - Follow the example to [use your own StorageClass](https://github.com/operator-framework/operator-metering/blob/master/manifests/metering-con***REMOVED***g/custom-storage.yaml) instead of the Dynamic Provisioner.

    * **Store data in S3 instead of PV** - Store your report output [in an S3 bucket](https://github.com/operator-framework/operator-metering/blob/master/Documentation/con***REMOVED***guring-storage.md#storing-data-in-s3) instead of a PersistentVolume.

    * **Con***REMOVED***gure AWS Billing Data Source** - To assign Pod $$ costs on AWS, create a [read-only IAM user](https://github.com/operator-framework/operator-metering/blob/master/Documentation/con***REMOVED***guring-aws-billing.md) ([example-policy](https://github.com/operator-framework/operator-metering/blob/master/Documentation/aws/read-only.json)) and [con***REMOVED***gure Metering](https://github.com/operator-framework/operator-metering/blob/master/manifests/metering-con***REMOVED***g/aws-billing.yaml) to use it.

  keywords: [metering metrics reporting prometheus chargeback]
  version: 0.13.0-latest
  maturity: alpha
  maintainers:
    - email: sd-operator-metering@redhat.com
      name: Red Hat

  provider:
    name: Red Hat

  labels:
    operator-metering: "true"

  selector:
    matchLabels:
      operator-metering: "true"

  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces

  install:
    strategy: deployment
    spec:
      clusterPermissions:
        - rules:
          - apiGroups:
            - ""
            resources:
            - namespaces
            verbs:
            - get
          - apiGroups:
            - authorization.k8s.io
            resources:
            - subjectaccessreviews
            verbs:
            - create
          - apiGroups:
            - authentication.k8s.io
            resources:
            - tokenreviews
            verbs:
            - create
          - apiGroups:
            - rbac.authorization.k8s.io
            resources:
            - clusterrolebindings
            - clusterroles
            verbs:
            - create
            - delete
            - deletecollection
            - get
            - list
            - patch
            - update
            - watch
          serviceAccountName: metering-operator

      permissions:
        - rules:
          - apiGroups:
            - metering.openshift.io
            resources:
            - '*'
            verbs:
            - '*'
          - apiGroups:
            - monitoring.coreos.com
            resources:
            - '*'
            verbs:
            - '*'
          - apiGroups:
            - ""
            resources:
            - pods
            - pods/attach
            - pods/exec
            - pods/portforward
            - pods/proxy
            verbs:
            - create
            - delete
            - deletecollection
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - ""
            resources:
            - con***REMOVED***gmaps
            - endpoints
            - persistentvolumeclaims
            - replicationcontrollers
            - replicationcontrollers/scale
            - secrets
            - serviceaccounts
            - services
            - services/proxy
            verbs:
            - create
            - delete
            - deletecollection
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - ""
            resources:
            - bindings
            - events
            - limitranges
            - namespaces/status
            - pods/log
            - pods/status
            - replicationcontrollers/status
            - resourcequotas
            - resourcequotas/status
            verbs:
            - get
            - list
            - watch
          - apiGroups:
            - ""
            resources:
            - events
            verbs:
            - create
            - update
            - patch
          - apiGroups:
            - ""
            resources:
            - namespaces
            verbs:
            - get
            - list
            - watch
          - apiGroups:
            - apps
            resources:
            - deployments
            - deployments/rollback
            - deployments/scale
            - statefulsets
            verbs:
            - create
            - delete
            - deletecollection
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - batch
            resources:
            - cronjobs
            - jobs
            verbs:
            - create
            - delete
            - deletecollection
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - extensions
            resources:
            - daemonsets
            - deployments
            - deployments/rollback
            - deployments/scale
            - replicasets
            - replicasets/scale
            - replicationcontrollers/scale
            verbs:
            - create
            - delete
            - deletecollection
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - rbac.authorization.k8s.io
            resources:
            - rolebindings
            - roles
            verbs:
            - create
            - delete
            - deletecollection
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - route.openshift.io
            resources:
            - routes
            verbs:
            - create
            - get
            - list
            - watch
            - update
            - delete
          serviceAccountName: metering-operator

      deployments:
        - name: metering-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: metering-operator
            strategy:
              type: Recreate
            template:
              metadata:
                labels:
                  app: metering-operator
              spec:
                containers:
                - args:
                  - run-operator.sh
                  env:
                  - name: HELM_RELEASE_CRD_NAME
                    value: Metering
                  - name: HELM_RELEASE_CRD_API_GROUP
                    value: metering.openshift.io
                  - name: HELM_CHART_PATH
                    value: /openshift-metering-0.1.0.tgz
                  - name: ALL_NAMESPACES
                    value: "false"
                  - name: TARGET_NAMESPACES
                    valueFrom:
                      ***REMOVED***eldRef:
                        ***REMOVED***eldPath: metadata.annotations['olm.targetNamespaces']
                  - name: MY_POD_NAME
                    valueFrom:
                      ***REMOVED***eldRef:
                        ***REMOVED***eldPath: metadata.name
                  - name: MY_POD_NAMESPACE
                    valueFrom:
                      ***REMOVED***eldRef:
                        ***REMOVED***eldPath: metadata.namespace
                  - name: HELM_HOST
                    value: 127.0.0.1:44134
                  - name: HELM_WAIT
                    value: "false"
                  - name: HELM_RECONCILE_INTERVAL_SECONDS
                    value: "30"
                  - name: RELEASE_HISTORY_LIMIT
                    value: "3"
                  image: quay.io/coreos/metering-helm-operator:0.13.0-latest
                  imagePullPolicy: Always
                  name: metering-operator
                  resources:
                    limits:
                      cpu: 50m
                      memory: 100Mi
                    requests:
                      cpu: 50m
                      memory: 100Mi
                - args:
                  - tiller
                  env:
                  - name: TILLER_NAMESPACE
                    valueFrom:
                      ***REMOVED***eldRef:
                        ***REMOVED***eldPath: metadata.namespace
                  - name: TILLER_HISTORY_MAX
                    value: "3"
                  image: quay.io/coreos/metering-helm-operator:0.13.0-latest
                  imagePullPolicy: Always
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                      path: /liveness
                      port: 44135
                      scheme: HTTP
                    initialDelaySeconds: 1
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  name: tiller
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                      path: /readiness
                      port: 44135
                      scheme: HTTP
                    initialDelaySeconds: 1
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 1
                  resources:
                    limits:
                      cpu: 50m
                      memory: 100Mi
                    requests:
                      cpu: 50m
                      memory: 50Mi
                restartPolicy: Always
                securityContext:
                  runAsNonRoot: true
                serviceAccount: metering-operator
                terminationGracePeriodSeconds: 30

  customresourcede***REMOVED***nitions:
    owned:
    - description: A SQL query used by Metering to generate reports.
      displayName: Metering Generation Query
      kind: ReportGenerationQuery
      name: reportgenerationqueries.metering.openshift.io
      version: v1alpha1
    - description: An instance of Metering with high-level con***REMOVED***guration
      displayName: Metering
      kind: Metering
      name: meterings.metering.openshift.io
      version: v1alpha1
    - description: A scheduled or on-off Metering Report summarizes data based on the
        query speci***REMOVED***ed.
      displayName: Metering Report
      kind: Report
      name: reports.metering.openshift.io
      version: v1alpha1
    - description: A Prometheus query that Metering can use to collect metrics.
      displayName: Metering Prometheus Query
      kind: ReportPrometheusQuery
      name: reportprometheusqueries.metering.openshift.io
      version: v1alpha1
    - description: A resource describing a source of data for usage by Report Generation
        Queries.
      displayName: Metering Data Source
      kind: ReportDataSource
      name: reportdatasources.metering.openshift.io
      version: v1alpha1
    - description: Represents a con***REMOVED***gurable storage location for Metering to store metering
        and report data.
      displayName: Metering Storage Location
      kind: StorageLocation
      name: storagelocations.metering.openshift.io
      version: v1alpha1
    - description: Used under-the-hood. A resource describing a source of data for usage
        by Report Generation Queries.
      displayName: Metering Presto Table
      kind: PrestoTable
      name: prestotables.metering.openshift.io
      version: v1alpha1

