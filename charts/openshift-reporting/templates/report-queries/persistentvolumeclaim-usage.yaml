apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: "persistentvolumeclaim-phase-raw"
  labels:
    operator-metering: "true"
{{- block "extraMetadata" . }}
{{- end }}
spec:
  reportDataSources:
  - "persistentvolumeclaim-phase"
  columns:
  - name: namespace
    type: string
  - name: persistentvolumeclaim
    type: string
  - name: labels
    type: map<string, string>
    tableHidden: true
  - name: value
    type: double
  - name: phase
    type: string
  - name: timeprecision
    type: double
    unit: seconds
  - name: timestamp
    type: timestamp
    unit: date
  - name: dt
    type: string
  query: |
    SELECT
        labels['namespace'] as namespace,
        labels['persistentvolumeclaim'] as persistentvolumeclaim,
        labels,
        amount as value,
        labels['phase'] as phase,
        timeprecision,
        "timestamp",
        dt
    FROM {| dataSourceTableName "persistentvolumeclaim-phase" |}

---

apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: "persistentvolumeclaim-usage-raw"
  labels:
    operator-metering: "true"
{{- block "extraMetadata" . }}
{{- end }}
spec:
  reportDataSources:
  - "persistentvolumeclaim-usage-bytes"
  columns:
  - name: namespace
    type: string
  - name: persistentvolumeclaim
    type: string
  - name: labels
    type: map<string, string>
    tableHidden: true
  - name: persistentvolumeclaim_usage_bytes
    type: double
    unit: bytes
  - name: timeprecision
    type: double
    unit: seconds
  - name: persistentvolumeclaim_usage_byte_seconds
    type: double
    unit: byte_seconds
  - name: timestamp
    type: timestamp
    unit: date
  - name: dt
    type: string
  query: |
    SELECT
        coalesce(element_at(labels, 'exported_namespace'), element_at(labels, 'namespace')) as namespace,
        labels['persistentvolumeclaim'] as persistentvolumeclaim,
        labels,
        amount as persistentvolumeclaim_usage_bytes,
        timeprecision,
        amount * timeprecision as persistentvolumeclaim_usage_byte_seconds,
        "timestamp",
        dt
    FROM {| dataSourceTableName "persistentvolumeclaim-usage-bytes" |}

---

apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: "persistentvolumeclaim-usage-with-phase-raw"
  labels:
    operator-metering: "true"
{{- block "extraMetadata" . }}
{{- end }}
spec:
  reportDataSources:
  - "persistentvolumeclaim-usage-raw"
  - "persistentvolumeclaim-phase-raw"
  columns:
  - name: namespace
    type: string
    unit: kubernetes_namespace
  - name: timestamp
    type: timestamp
    unit: date
  - name: persistentvolumeclaim
    type: string
  - name: persistentvolumeclaim_usage_bytes
    type: double
    unit: bytes
  - name: dt
    type: string
  query: |
    SELECT
      phase.namespace AS namespace,
      phase.timestamp AS timestamp,
      phase.persistentvolumeclaim AS persistentvolumeclaim,
      min(persistentvolumeclaim_usage_bytes) AS persistentvolumeclaim_usage_bytes,
      phase.dt AS dt
    FROM {| dataSourceTableName "persistentvolumeclaim-phase-raw" |} AS phase
    FULL OUTER JOIN {| dataSourceTableName "persistentvolumeclaim-usage-raw" |} AS usage
    ON phase.namespace=usage.namespace
    AND phase.persistentvolumeclaim=usage.persistentvolumeclaim
    AND phase.timestamp=usage.timestamp
    GROUP BY phase.timestamp, phase.dt, phase.namespace, phase.persistentvolumeclaim

---

apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: "persistentvolumeclaim-usage"
  labels:
    operator-metering: "true"
{{- block "extraMetadata" . }}
{{- end }}
spec:
  reportDataSources:
  - "persistentvolumeclaim-usage-with-phase-raw"
  columns:
  - name: period_start
    type: timestamp
    unit: date
  - name: period_end
    type: timestamp
  - name: namespace
    type: string
    unit: kubernetes_namespace
  - name: persistentvolumeclaim
    type: string
    unit: kubernetes_persistentvolumeclaim
  - name: persistentvolumeclaim_usage_bytes
    type: double
    unit: bytes
  inputs:
  - name: ReportingStart
  - name: ReportingEnd
  query: |
    SELECT
      timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
      timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
      namespace,
      persistentvolumeclaim,
      sum(persistentvolumeclaim_usage_bytes)
    FROM {| dataSourceTableName "persistentvolumeclaim-usage-with-phase-raw" |}
    WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
    AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
    AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
    AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
    GROUP BY namespace, persistentvolumeclaim

---

apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: "namespace-persistentvolumeclaim-usage"
  labels:
    operator-metering: "true"
{{- block "extraMetadata" . }}
{{- end }}
spec:
  reportDataSources:
  - "persistentvolumeclaim-usage-with-phase-raw"
  columns:
  - name: period_start
    type: timestamp
    unit: date
  - name: period_end
    type: timestamp
  - name: namespace
    type: string
    unit: kubernetes_namespace
  - name: persistentvolumeclaim_usage_bytes
    type: double
    unit: bytes
  inputs:
  - name: ReportingStart
  - name: ReportingEnd
  query: |
    SELECT
      timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
      timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
      namespace,
      sum(persistentvolumeclaim_usage_bytes)
    FROM {| dataSourceTableName "persistentvolumeclaim-usage-with-phase-raw" |}
    WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
    AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
    AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
    AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
    GROUP BY namespace
