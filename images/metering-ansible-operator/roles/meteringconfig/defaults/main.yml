---

meteringcon***REMOVED***g_chart_path: "{{ lookup('env','HELM_CHART_PATH') }}"
meteringcon***REMOVED***g_prune_label_key: 'metering.openshift.io/prune'
meteringcon***REMOVED***g_prune_namespace_label_key: 'metering.openshift.io/ns-prune'
meteringcon***REMOVED***g_default_values_***REMOVED***le: "{{ meteringcon***REMOVED***g_chart_path + '/values.yaml' }}"
meteringcon***REMOVED***g_default_values: "{{ lookup('***REMOVED***le', meteringcon***REMOVED***g_default_values_***REMOVED***le) | from_yaml }}"

# contains the users overrides
meteringcon***REMOVED***g_spec_overrides: "{{ _metering_openshift_io_meteringcon***REMOVED***g.spec }}"

# The default specs for each component
_openshift_reporting_default_spec: "{{ meteringcon***REMOVED***g_default_values['openshift-reporting'].spec }}"
_presto_default_spec: "{{ meteringcon***REMOVED***g_default_values.presto.spec }}"
_hive_default_spec: "{{ meteringcon***REMOVED***g_default_values.hive.spec }}"
_reporting_op_default_spec: "{{ meteringcon***REMOVED***g_default_values['reporting-operator'].spec }}"
_hadoop_default_spec: "{{ meteringcon***REMOVED***g_default_values.hadoop.spec }}"
_ghostunnel_default: "{{ meteringcon***REMOVED***g_default_values.__ghostunnel }}"

# Default image repository and tag from the defaults
meteringcon***REMOVED***g_reporting_operator_default_image_repo: "{{ _reporting_op_default_spec.image.repository }}"
meteringcon***REMOVED***g_reporting_operator_default_image_tag: "{{ _reporting_op_default_spec.image.tag }}"
meteringcon***REMOVED***g_oauth_proxy_default_image_repo: "{{ _reporting_op_default_spec.authProxy.image.repository }}"
meteringcon***REMOVED***g_oauth_proxy_default_image_tag: "{{ _reporting_op_default_spec.authProxy.image.tag }}"
meteringcon***REMOVED***g_presto_default_image_repo: "{{ _presto_default_spec.image.repository }}"
meteringcon***REMOVED***g_presto_default_image_tag: "{{ _presto_default_spec.image.tag }}"
meteringcon***REMOVED***g_hive_default_image_repo: "{{ _hive_default_spec.image.repository }}"
meteringcon***REMOVED***g_hive_default_image_tag: "{{ _hive_default_spec.image.tag }}"
meteringcon***REMOVED***g_hadoop_default_image_repo: "{{ _hadoop_default_spec.image.repository }}"
meteringcon***REMOVED***g_hadoop_default_image_tag: "{{ _hadoop_default_spec.image.tag }}"
meteringcon***REMOVED***g_ghostunnel_default_image_repo: "{{ _ghostunnel_default.image.repository }}"
meteringcon***REMOVED***g_ghostunnel_default_image_tag: "{{ _ghostunnel_default.image.tag }}"

meteringcon***REMOVED***g_reporting_operator_override_image: "{{ lookup('env', 'METERING_REPORTING_OPERATOR_IMAGE') }}"
meteringcon***REMOVED***g_oauth_proxy_override_image: "{{ lookup('env', 'OAUTH_PROXY_IMAGE') }}"
meteringcon***REMOVED***g_presto_override_image: "{{ lookup('env', 'METERING_PRESTO_IMAGE') }}"
meteringcon***REMOVED***g_hive_override_image: "{{ lookup('env', 'METERING_HIVE_IMAGE') }}"
meteringcon***REMOVED***g_hadoop_override_image: "{{ lookup('env', 'METERING_HADOOP_IMAGE') }}"
meteringcon***REMOVED***g_ghostunnel_override_image: "{{ lookup('env', 'GHOSTUNNEL_IMAGE') }}"

_storage_spec: "{{ meteringcon***REMOVED***g_default_values | combine(meteringcon***REMOVED***g_spec_overrides) | json_query('storage') | default({}, true) }}"

# Override the default images we use with env vars if set, falling back to the values.yaml con***REMOVED***gured default if not set.
meteringcon***REMOVED***g_default_image_overrides:
  reporting-operator:
    spec:
      image:
        repository: "{{ meteringcon***REMOVED***g_reporting_operator_default_image_repo }}"
        tag: "{{ meteringcon***REMOVED***g_reporting_operator_default_image_tag }}"
        override: "{{ meteringcon***REMOVED***g_reporting_operator_override_image }}"

      authProxy:
        image:
          repository: "{{ meteringcon***REMOVED***g_oauth_proxy_default_image_repo }}"
          tag: "{{ meteringcon***REMOVED***g_oauth_proxy_default_image_tag }}"
          override: "{{ meteringcon***REMOVED***g_oauth_proxy_override_image }}"

  presto:
    spec:
      image:
        repository: "{{ meteringcon***REMOVED***g_presto_default_image_repo }}"
        tag: "{{ meteringcon***REMOVED***g_presto_default_image_tag }}"
        override: "{{ meteringcon***REMOVED***g_presto_override_image }}"
  hive:
    spec:
      image:
        repository: "{{ meteringcon***REMOVED***g_hive_default_image_repo }}"
        tag: "{{ meteringcon***REMOVED***g_hive_default_image_tag }}"
        override: "{{ meteringcon***REMOVED***g_hive_override_image }}"
  hadoop:
    spec:
      image:
        repository: "{{ meteringcon***REMOVED***g_hadoop_default_image_repo }}"
        tag: "{{ meteringcon***REMOVED***g_hadoop_default_image_tag }}"
        override: "{{ meteringcon***REMOVED***g_hadoop_override_image }}"
  __ghostunnel:
    image:
      repository: "{{ meteringcon***REMOVED***g_ghostunnel_default_image_repo }}"
      tag: "{{ meteringcon***REMOVED***g_ghostunnel_default_image_tag }}"
      override: "{{ meteringcon***REMOVED***g_ghostunnel_override_image }}"

_base_storage_overrides:
  s3:
    storage:
      hive:
        # s3 storage defaults
        s3:
          # Intentionally an invalid default name to ensure that this is overridden, and obvious when it's not.
          bucket: "-uncon***REMOVED***gured-metering-bucket-name-"
          secretName: ""
          # create buckets by default
          createBucket: true
          region: ""
    reporting-operator:
      spec:
        con***REMOVED***g:
          aws:
            secretName: "{{ _storage_spec | json_query('hive.s3.secretName') }}"
            createSecret: false
    presto:
      spec:
        con***REMOVED***g:
          aws:
            secretName: "{{ _storage_spec | json_query('hive.s3.secretName') }}"
            createSecret: false
    hive:
      spec:
        con***REMOVED***g:
          # regex_replace to append a trailing slash if missing
          metastoreWarehouseDir: "s3a://{{ _storage_spec | json_query('hive.s3.bucket') | regex_replace('\\/?$', '/') }}"
          aws:
            secretName: "{{ _storage_spec | json_query('hive.s3.secretName') }}"
            createSecret: false
    hadoop:
      spec:
        con***REMOVED***g:
          # regex_replace to append a trailing slash if missing
          defaultFS: "s3a://{{ _storage_spec | json_query('hive.s3.bucket') | regex_replace('\\/?$', '/') }}"
        hdfs:
          enabled: false

  azure:
    storage:
      hive:
        # azure storage defaults
        azure:
          # Intentionally an invalid default name to ensure that this is overridden, and obvious when it's not.
          container: "-uncon***REMOVED***gured-metering-container-name-"
          secretName: ""
          storageAccountName: ""
          secretAccessKey: ""
          createSecret: false
          rootDirectory: ""
    presto:
      spec:
        con***REMOVED***g:
          azure:
            secretName: "{{ _storage_spec | json_query('hive.azure.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.azure.createSecret') }}"
            storageAccountName: "{{ _storage_spec | json_query('hive.azure.storageAccountName') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.azure.secretAccessKey') }}"
    hive:
      spec:
        con***REMOVED***g:
          metastoreWarehouseDir: "wasbs://{{ _storage_spec | json_query('hive.azure.container') }}@{{ _storage_spec | json_query('hive.azure.storageAccountName') }}.blob.core.windows.net{{ _storage_spec | json_query('hive.azure.rootDirectory') | default('/', True) | regex_replace('^\\/?', '/') }}"
          azure:
            secretName: "{{ _storage_spec | json_query('hive.azure.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.azure.createSecret') }}"
            storageAccountName: "{{ _storage_spec | json_query('hive.azure.storageAccountName') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.azure.secretAccessKey') }}"
    hadoop:
      spec:
        con***REMOVED***g:
          defaultFS: "wasbs://{{ _storage_spec | json_query('hive.azure.container') }}@{{ _storage_spec | json_query('hive.azure.storageAccountName') }}.blob.core.windows.net{{ _storage_spec | json_query('hive.azure.rootDirectory') | default('/', True) | regex_replace('^\\/?', '/') }}"
          azure:
            secretName: "{{ _storage_spec | json_query('hive.azure.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.azure.createSecret') }}"
            storageAccountName: "{{ _storage_spec | json_query('hive.azure.storageAccountName') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.azure.secretAccessKey') }}"
        hdfs:
          enabled: false

  gcs:
    storage:
      hive:
        # gcs storage defaults
        gcs:
          # Intentionally an invalid default name to ensure that this is overridden, and obvious when it's not.
          bucket: "-uncon***REMOVED***gured-metering-bucket-name-"
          secretName: ""
          createSecret: false
          serviceAccountKeyJSON: ""
    presto:
      spec:
        con***REMOVED***g:
          gcs:
            secretName: "{{ _storage_spec | json_query('hive.gcs.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.gcs.createSecret') }}"
            serviceAccountKeyJSON: "{{ _storage_spec | json_query('hive.gcs.serviceAccountKeyJSON') }}"
    hive:
      spec:
        con***REMOVED***g:
          metastoreWarehouseDir: "gs://{{ _storage_spec | json_query('hive.gcs.bucket') | regex_replace('\\/?$', '/') }}"
          gcs:
            secretName: "{{ _storage_spec | json_query('hive.gcs.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.gcs.createSecret') }}"
            serviceAccountKeyJSON: "{{ _storage_spec | json_query('hive.gcs.serviceAccountKeyJSON') }}"
    hadoop:
      spec:
        con***REMOVED***g:
          defaultFS: "gs://{{ _storage_spec | json_query('hive.gcs.bucket') | regex_replace('\\/?$', '/') }}"
          gcs:
            secretName: "{{ _storage_spec | json_query('hive.gcs.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.gcs.createSecret') }}"
            serviceAccountKeyJSON: "{{ _storage_spec | json_query('hive.gcs.serviceAccountKeyJSON') }}"
        hdfs:
          enabled: false

  s3Compatible:
    storage:
      hive:
        # s3 storage defaults
        s3Compatible:
          # Intentionally an invalid default name to ensure that this is overridden, and obvious when it's not.
          bucket: "-uncon***REMOVED***gured-metering-bucket-name-"
          secretName: ""
          createSecret: false
          accessKeyID: ""
          secretAccessKey: ""
          endpoint: ""
          ca:
            createSecret: false
            secretName: ""
            content: ""

    presto:
      spec:
        con***REMOVED***g:
          s3Compatible:
            secretName: "{{ _storage_spec | json_query('hive.s3Compatible.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.s3Compatible.createSecret') }}"
            accessKeyID: "{{ _storage_spec | json_query('hive.s3Compatible.accessKeyID') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.s3Compatible.secretAccessKey') }}"
            endpoint: "{{ _storage_spec | json_query('hive.s3Compatible.endpoint') }}"
            ca:
              createSecret: "{{ _storage_spec | json_query('hive.s3Compatible.ca.createSecret') }}"
              secretName: "{{ _storage_spec | json_query('hive.s3Compatible.ca.secretName') }}"
              content: "{{ _storage_spec | json_query('hive.s3Compatible.ca.content') }}"

    hive:
      spec:
        con***REMOVED***g:
          # regex_replace to append a trailing slash if missing
          metastoreWarehouseDir: "s3a://{{ _storage_spec | json_query('hive.s3Compatible.bucket') | regex_replace('\\/?$', '/') }}"
          s3Compatible:
            secretName: "{{ _storage_spec | json_query('hive.s3Compatible.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.s3Compatible.createSecret') }}"
            accessKeyID: "{{ _storage_spec | json_query('hive.s3Compatible.accessKeyID') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.s3Compatible.secretAccessKey') }}"
            endpoint: "{{ _storage_spec | json_query('hive.s3Compatible.endpoint') }}"
            ca:
              createSecret: "{{ _storage_spec | json_query('hive.s3Compatible.ca.createSecret') }}"
              secretName: "{{ _storage_spec | json_query('hive.s3Compatible.ca.secretName') }}"
              content: "{{ _storage_spec | json_query('hive.s3Compatible.ca.content') }}"

    hadoop:
      spec:
        con***REMOVED***g:
          # regex_replace to append a trailing slash if missing
          defaultFS: "s3a://{{ _storage_spec | json_query('hive.s3Compatible.bucket') | regex_replace('\\/?$', '/') }}"
          s3Compatible:
            secretName: "{{ _storage_spec | json_query('hive.s3Compatible.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.s3Compatible.createSecret') }}"
            accessKeyID: "{{ _storage_spec | json_query('hive.s3Compatible.accessKeyID') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.s3Compatible.secretAccessKey') }}"
            endpoint: "{{ _storage_spec | json_query('hive.s3Compatible.endpoint') }}"
            ca:
              createSecret: "{{ _storage_spec | json_query('hive.s3Compatible.ca.createSecret') }}"
              secretName: "{{ _storage_spec | json_query('hive.s3Compatible.ca.secretName') }}"
              content: "{{ _storage_spec | json_query('hive.s3Compatible.ca.content') }}"

        hdfs:
          enabled: false

  hdfs:
    hadoop:
      spec:
        con***REMOVED***g:
          defaultFS: "hdfs://{{ _storage_spec | json_query('hive.hdfs.namenode') | default('hdfs-namenode-0.hdfs-namenode:9820', true) }}"
        hdfs:
          enabled: "{{ meteringcon***REMOVED***g_spec_overrides | json_query('unsupportedFeatures.enableHDFS') | default(false, true) }}"

  sharedPVC:
    hive:
      spec:
        con***REMOVED***g:
          metastoreWarehouseDir: "{{ _storage_spec | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"
          sharedVolume:
            enabled: true
            createPVC: "{{ _storage_spec | json_query('hive.sharedPVC.createPVC') | default(false, true) }}"
            mountPath: "{{ _storage_spec | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"
            claimName: "{{ _storage_spec | json_query('hive.sharedPVC.claimName') | default(_hive_default_spec.con***REMOVED***g.sharedVolume.claimName, true) }}"
            size: "{{ _storage_spec | json_query('hive.sharedPVC.size') | default(_hive_default_spec.con***REMOVED***g.sharedVolume.size, true) }}"
            storageClass: "{{ _storage_spec | json_query('hive.sharedPVC.storageClass') | default(_hive_default_spec.con***REMOVED***g.sharedVolume.storageClass, true) }}"

    hadoop:
      spec:
        con***REMOVED***g:
          defaultFS: "***REMOVED***le://{{ _storage_spec | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"
        hdfs:
          enabled: false

# overides the accountname(potentially empty) from a designated secret and generate the storage URL
meteringcon***REMOVED***g_storage_azure_create_secret: "{{ _storage_spec | json_query('hive.azure.createSecret') | default(false, true) }}"

_azure_secret_account_name: ""
#
# Use _azure_account_overides when meteringcon***REMOVED***g_storage_azure_create_secret is false to correctly set the defaultFS and metastoreWarehouseDir with the storage account name from the user's secret.
#
_azure_account_overides:
  azure:
    hadoop:
      spec:
        con***REMOVED***g:
          defaultFS: "wasbs://{{ _storage_spec | json_query('hive.azure.container') }}@{{ _azure_secret_account_name  }}.blob.core.windows.net{{ _storage_spec | json_query('hive.azure.rootDirectory')| default('/', True) | regex_replace('^\\/?', '/') }}"
    hive:
      spec:
        con***REMOVED***g:
          metastoreWarehouseDir: "wasbs://{{ _storage_spec | json_query('hive.azure.container') }}@{{ _azure_secret_account_name }}.blob.core.windows.net{{ _storage_spec | json_query('hive.azure.rootDirectory')| default('/', True) | regex_replace('^\\/?', '/') }}"

_meteringcon***REMOVED***g_azure_overrides: "{{ meteringcon***REMOVED***g_storage_azure_create_secret | ternary({} , _azure_account_overides ) | default({}, true) }}"
_storage_overrides: "{{ _base_storage_overrides | combine(_meteringcon***REMOVED***g_azure_overrides, recursive = True) }}"
meteringcon***REMOVED***g_storage_azure_container_name: "{{ _storage_spec | json_query('hive.azure.container') }}"
meteringcon***REMOVED***g_storage_azure_storage_account_name: "{{ _storage_spec | json_query('hive.azure.storageAccountName') }}"
meteringcon***REMOVED***g_storage_azure_credentials_secret_name: "{{ _storage_spec | json_query('hive.azure.secretName') }}"
meteringcon***REMOVED***g_storage_hive_storage_type: "{{ _storage_spec | json_query('hive.type') }}"
meteringcon***REMOVED***g_storage_overrides: "{{ _storage_overrides[meteringcon***REMOVED***g_storage_hive_storage_type] | default({}, true) }}"

# variables for validating GCS
meteringcon***REMOVED***g_storage_gcs_bucket_name: "{{ _storage_spec | json_query('hive.gcs.bucket') }}"
meteringcon***REMOVED***g_storage_gcs_create_secret: "{{ _storage_spec | json_query('hive.gcs.createSecret') | default(false, true) }}"
meteringcon***REMOVED***g_storage_gcs_credentials_secret_name: "{{ _storage_spec | json_query('hive.gcs.secretName') }}"

# variables for validating S3 Compatible Storage
meteringcon***REMOVED***g_storage_s3Compatible_bucket_name: "{{ _storage_spec | json_query('hive.s3Compatible.bucket') }}"
meteringcon***REMOVED***g_storage_s3Compatible_create_secret: "{{ _storage_spec | json_query('hive.s3Compatible.createSecret') | default(false, true) }}"
meteringcon***REMOVED***g_storage_s3Compatible_credentials_secret_name: "{{ _storage_spec | json_query('hive.s3Compatible.secretName') }}"
meteringcon***REMOVED***g_storage_s3Compatible_endpoint: "{{ _storage_spec | json_query('hive.s3Compatible.endpoint') }}"

#
# Override the default values to handle Openshift, and non-Openshift con***REMOVED***gurations
#
meteringcon***REMOVED***g_ocp_disabled: "{{ lookup('env', 'DISABLE_OCP_FEATURES') | bool or meteringcon***REMOVED***g_default_values | combine(meteringcon***REMOVED***g_spec_overrides, recursive=True) | json_query('disableOCPFeatures') }}"
_meteringcon***REMOVED***g_ocp_disabled_overrides: "{{ meteringcon***REMOVED***g_ocp_disabled | ternary(_ocp_disabled_overrides, _ocp_enabled_overrides) }}"

_ocp_disabled_overrides:
  tls:
    enabled: false

  monitoring:
    enabled: false

  openshift-reporting:
    spec:
      defaultReportDataSources:
        postKube_1_14:
          enabled: false

  reporting-operator:
    spec:
      route:
        enabled: false

      con***REMOVED***g:
        prometheus:
          certi***REMOVED***cateAuthority:
            useServiceAccountCA: false

          metricsImporter:
            auth:
              useServiceAccountToken: true
              tokenSecret:
                enabled: false

        tls:
          api:
            enabled: false

  presto:
    spec:
      securityContext:
        fsGroup: 0

  hive:
    spec:
      securityContext:
        fsGroup: 0

  hadoop:
    spec:
      hdfs:
        securityContext:
          fsGroup: 0

_ocp_enabled_overrides:
  reporting-operator:
    spec:
      con***REMOVED***g:
        prometheus:
          url: "https://prometheus-k8s.openshift-monitoring.svc:9091/"

#
# Override the default values with _tls_overrides when spec.tls.enabled is set to true, ***REMOVED*** use values.yaml and meteringcon***REMOVED***g_spec_overrides
#
_meteringcon***REMOVED***g_reporting_operator_presto_server_ca_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_reporting_operator_presto_server_secret_name: "reporting-operator-presto-server-tls"

_meteringcon***REMOVED***g_reporting_operator_presto_client_secret_name: "reporting-operator-presto-client-tls"
_meteringcon***REMOVED***g_reporting_operator_presto_client_cert: ""
_meteringcon***REMOVED***g_reporting_operator_presto_client_key: ""

_meteringcon***REMOVED***g_reporting_operator_hive_client_secret_name: "reporting-operator-hive-client-tls"
_meteringcon***REMOVED***g_reporting_operator_hive_client_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_reporting_operator_hive_client_key: ""

_meteringcon***REMOVED***g_reporting_operator_hive_server_ca_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_reporting_operator_hive_server_secret_name: "reporting-operator-hive-server-tls"

_meteringcon***REMOVED***g_reporting_operator_auth_proxy_cookie_seed: ""

_meteringcon***REMOVED***g_presto_server_secret_name: "presto-server-tls"
_meteringcon***REMOVED***g_presto_server_ca_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_presto_server_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_presto_server_key: ""

_meteringcon***REMOVED***g_presto_client_secret_name: "presto-client-tls"
_meteringcon***REMOVED***g_presto_client_ca_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_presto_client_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_presto_client_key: ""

_meteringcon***REMOVED***g_presto_hive_client_secret_name: "presto-hive-metastore-client-tls"
_meteringcon***REMOVED***g_presto_hive_client_ca_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_presto_hive_client_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_presto_hive_client_key: ""

_meteringcon***REMOVED***g_hive_metastore_server_secret_name: "hive-metastore-server-tls"
_meteringcon***REMOVED***g_hive_metastore_server_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_hive_metastore_server_key: ""
_meteringcon***REMOVED***g_hive_metastore_server_ca_certi***REMOVED***cate: ""

_meteringcon***REMOVED***g_hive_server_secret_name: "hive-server-tls"
_meteringcon***REMOVED***g_hive_server_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_hive_server_key: ""
_meteringcon***REMOVED***g_hive_server_ca_certi***REMOVED***cate: ""

_meteringcon***REMOVED***g_hive_server_client_secret_name: "hive-server-auth-tls"
_meteringcon***REMOVED***g_hive_server_client_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_hive_server_client_key: ""
_meteringcon***REMOVED***g_hive_server_client_ca_certi***REMOVED***cate: ""

_meteringcon***REMOVED***g_tls_root_ca_certi***REMOVED***cate: ""
_meteringcon***REMOVED***g_tls_root_ca_key: ""

_meteringcon***REMOVED***g_root_ca_overrides:
  tls:
    certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_tls_root_ca_certi***REMOVED***cate }}"
    key: "{{ _meteringcon***REMOVED***g_tls_root_ca_key }}"

_tls_overrides:
  reporting-operator:
    spec:
      con***REMOVED***g:
        presto:
          tls:
            caCerti***REMOVED***cate: "{{ _meteringcon***REMOVED***g_reporting_operator_presto_server_ca_certi***REMOVED***cate }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringcon***REMOVED***g_reporting_operator_presto_server_secret_name }}"

          auth:
            certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_reporting_operator_presto_client_cert }}"
            key: "{{ _meteringcon***REMOVED***g_reporting_operator_presto_client_key }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringcon***REMOVED***g_reporting_operator_presto_client_secret_name }}"

        hive:
          tls:
            caCerti***REMOVED***cate: "{{ _meteringcon***REMOVED***g_reporting_operator_hive_server_ca_certi***REMOVED***cate }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringcon***REMOVED***g_reporting_operator_hive_server_secret_name }}"

          auth:
            certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_reporting_operator_hive_client_certi***REMOVED***cate }}"
            key: "{{ _meteringcon***REMOVED***g_reporting_operator_hive_client_key }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringcon***REMOVED***g_reporting_operator_hive_client_secret_name }}"

      authProxy:
        enabled: true

        cookie:
          seed: "{{ _meteringcon***REMOVED***g_reporting_operator_auth_proxy_cookie_seed }}"

        deletegateURLs:
          enabled: true

        subjectAccessReview:
          enabled: true

  presto:
    spec:
      con***REMOVED***g:
        tls:
          certi***REMOVED***cate: "{{  _meteringcon***REMOVED***g_presto_server_certi***REMOVED***cate }}"
          key: "{{ _meteringcon***REMOVED***g_presto_server_key }}"
          caCerti***REMOVED***cate: "{{ _meteringcon***REMOVED***g_presto_server_ca_certi***REMOVED***cate }}"

          enabled: true
          createSecret: true
          secretName: "{{ _meteringcon***REMOVED***g_presto_server_secret_name }}"
        auth:
          certi***REMOVED***cate: "{{  _meteringcon***REMOVED***g_presto_client_certi***REMOVED***cate }}"
          key: "{{ _meteringcon***REMOVED***g_presto_client_key }}"
          caCerti***REMOVED***cate: "{{ _meteringcon***REMOVED***g_presto_client_ca_certi***REMOVED***cate }}"

          enabled: true
          createSecret: true
          secretName: "{{ _meteringcon***REMOVED***g_presto_client_secret_name }}"

        connectors:
          hive:
            tls:
              certi***REMOVED***cate: "{{  _meteringcon***REMOVED***g_presto_hive_client_certi***REMOVED***cate }}"
              key: "{{ _meteringcon***REMOVED***g_presto_hive_client_key }}"
              caCerti***REMOVED***cate: "{{ _meteringcon***REMOVED***g_presto_hive_client_ca_certi***REMOVED***cate }}"

              enabled: true
              createSecret: true
              secretName: "{{ _meteringcon***REMOVED***g_presto_hive_client_secret_name }}"

  hive:
    spec:
      metastore:
        con***REMOVED***g:
          tls:
            certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_hive_metastore_server_certi***REMOVED***cate }}"
            key: "{{ _meteringcon***REMOVED***g_hive_metastore_server_key }}"
            caCerti***REMOVED***cate: "{{ _meteringcon***REMOVED***g_hive_metastore_server_ca_certi***REMOVED***cate }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringcon***REMOVED***g_hive_metastore_server_secret_name }}"

          auth:
            enabled: true

      server:
        con***REMOVED***g:
          tls:
            certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_hive_server_certi***REMOVED***cate }}"
            key: "{{ _meteringcon***REMOVED***g_hive_server_key }}"
            caCerti***REMOVED***cate: "{{ _meteringcon***REMOVED***g_hive_server_ca_certi***REMOVED***cate }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringcon***REMOVED***g_hive_server_secret_name }}"

          auth:
            enabled: true

          metastoreTLS:
            certi***REMOVED***cate: "{{ _meteringcon***REMOVED***g_hive_server_client_certi***REMOVED***cate }}"
            key: "{{ _meteringcon***REMOVED***g_hive_server_client_key }}"
            caCerti***REMOVED***cate: "{{ _meteringcon***REMOVED***g_hive_server_client_ca_certi***REMOVED***cate }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringcon***REMOVED***g_hive_server_client_secret_name }}"


# check if the user's spec contains the top-level tls.enabled ***REMOVED***eld. if true, use the value stored in that ***REMOVED***eld, ***REMOVED*** default to the value stored in values.yaml
meteringcon***REMOVED***g_tls_enabled: "{{ meteringcon***REMOVED***g_default_values | combine(_meteringcon***REMOVED***g_ocp_disabled_overrides, meteringcon***REMOVED***g_spec_overrides, recursive=True) | json_query('tls.enabled') }}"
_meteringcon***REMOVED***g_tls_overrides: "{{ meteringcon***REMOVED***g_tls_enabled | ternary(_tls_overrides, {}) }}"

# openshift-reporting overrides
meteringcon***REMOVED***g_reporting_enable_post_kube_1_14_datasources: "{{ _openshift_reporting_default_spec.defaultReportDataSources.postKube_1_14.enabled }}"

meteringcon***REMOVED***g_reporting_overrides:
  openshift-reporting:
    spec:
      defaultReportDataSources:
        postKube_1_14:
          enabled: "{{ meteringcon***REMOVED***g_reporting_enable_post_kube_1_14_datasources }}"

# combine the _meteringcon***REMOVED***g_tls_overrides dictionary last to enforce when spec.tls.enabled is speci***REMOVED***ed and set to true
meteringcon***REMOVED***g_spec: "{{ meteringcon***REMOVED***g_default_values | combine(meteringcon***REMOVED***g_default_image_overrides, meteringcon***REMOVED***g_storage_overrides, meteringcon***REMOVED***g_reporting_overrides, _meteringcon***REMOVED***g_root_ca_overrides, _meteringcon***REMOVED***g_tls_overrides, _meteringcon***REMOVED***g_ocp_disabled_overrides, meteringcon***REMOVED***g_spec_overrides, recursive=True) }}"

meteringcon***REMOVED***g_storage_s3_create_bucket: "{{ meteringcon***REMOVED***g_spec | json_query('storage.hive.s3.createBucket') }}"
meteringcon***REMOVED***g_storage_s3_bucket_name: "{{ (meteringcon***REMOVED***g_spec | json_query('storage.hive.s3.bucket') | default('', true)).split('/')[0] }}"
meteringcon***REMOVED***g_storage_s3_bucket_region: "{{ meteringcon***REMOVED***g_spec | json_query('storage.hive.s3.region') }}"
meteringcon***REMOVED***g_storage_s3_aws_credentials_secret_name: "{{ meteringcon***REMOVED***g_spec | json_query('storage.hive.s3.secretName') }}"

########################
# All Variables below are setup to consume the result of merging the defaults, internal overrides, and user overrides.
########################

# Private variables to reduce boilerplate
_monitoring_conf: "{{ meteringcon***REMOVED***g_spec.monitoring }}"
_openshift_reporting_spec: "{{ meteringcon***REMOVED***g_spec['openshift-reporting'].spec }}"
_presto_spec: "{{ meteringcon***REMOVED***g_spec.presto.spec }}"
_hive_spec: "{{ meteringcon***REMOVED***g_spec.hive.spec }}"
_reporting_op_spec: "{{ meteringcon***REMOVED***g_spec['reporting-operator'].spec }}"
_hadoop_spec: "{{ meteringcon***REMOVED***g_spec.hadoop.spec }}"


meteringcon***REMOVED***g_log_helm_template: "{{ meteringcon***REMOVED***g_spec.logHelmTemplate | default(false) }}"

meteringcon***REMOVED***g_create_metering_default_storage: "{{ _openshift_reporting_spec.defaultStorageLocation.enabled }}"

meteringcon***REMOVED***g_create_metering_monitoring_resources: "{{ _monitoring_conf.enabled | default(true) }}"
meteringcon***REMOVED***g_create_metering_monitoring_rbac: "{{ _monitoring_conf.enabled and _monitoring_conf.enabled and _monitoring_conf.createRBAC | default(true) }}"
meteringcon***REMOVED***g_create_metering_root_ca_secret: "{{ meteringcon***REMOVED***g_spec.tls.enabled }}"

meteringcon***REMOVED***g_enable_reporting_aws_billing: "{{ _openshift_reporting_spec.awsBillingReportDataSource.enabled | default(false) }}"

meteringcon***REMOVED***g_enable_hdfs: "{{ _hadoop_spec.hdfs.enabled | default(true) }}"
meteringcon***REMOVED***g_create_hadoop_aws_credentials: "{{ _hadoop_spec.con***REMOVED***g.aws.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hadoop_azure_credentials: "{{ _hadoop_spec.con***REMOVED***g.azure.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hadoop_gcs_credentials: "{{ _hadoop_spec.con***REMOVED***g.gcs.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hadoop_s3_compatible_credentials: "{{ _hadoop_spec.con***REMOVED***g.s3Compatible.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hadoop_s3_compatible_ca: "{{ _hadoop_spec.con***REMOVED***g.s3Compatible.ca.createSecret | default(false) }}"

meteringcon***REMOVED***g_create_hive_metastore_pvc: "{{ _hive_spec.metastore.storage.create | default(true) }}"
meteringcon***REMOVED***g_create_hive_shared_volume_pvc: "{{ _hive_spec.con***REMOVED***g.sharedVolume.enabled and _hive_spec.con***REMOVED***g.sharedVolume.createPVC | default(false) }}"
meteringcon***REMOVED***g_create_hive_aws_credentials: "{{ _hive_spec.con***REMOVED***g.aws.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hive_azure_credentials: "{{ _hive_spec.con***REMOVED***g.azure.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hive_gcs_credentials: "{{ _hive_spec.con***REMOVED***g.gcs.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hive_s3_compatible_credentials: "{{ _hive_spec.con***REMOVED***g.s3Compatible.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hive_s3_compatible_ca: "{{ _hive_spec.con***REMOVED***g.s3Compatible.ca.createSecret | default(false) }}"

meteringcon***REMOVED***g_create_hive_metastore_tls_secrets: "{{ _hive_spec.metastore.con***REMOVED***g.tls.enabled and _hive_spec.metastore.con***REMOVED***g.tls.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hive_server_metastore_tls_secrets: "{{ _hive_spec.server.con***REMOVED***g.metastoreTLS.enabled and _hive_spec.server.con***REMOVED***g.metastoreTLS.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_hive_server_tls_secrets: "{{ _hive_spec.server.con***REMOVED***g.tls.enabled and _hive_spec.server.con***REMOVED***g.tls.createSecret | default(false) }}"

meteringcon***REMOVED***g_create_presto_aws_credentials: "{{ _presto_spec.con***REMOVED***g.aws.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_presto_azure_credentials: "{{ _presto_spec.con***REMOVED***g.azure.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_presto_hive_metastore_tls_secrets: "{{ _presto_spec.con***REMOVED***g.connectors.hive.tls.enabled and _presto_spec.con***REMOVED***g.connectors.hive.tls.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_presto_gcs_credentials: "{{ _presto_spec.con***REMOVED***g.gcs.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_presto_s3_compatible_credentials: "{{ _presto_spec.con***REMOVED***g.s3Compatible.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_presto_s3_compatible_ca: "{{ _presto_spec.con***REMOVED***g.s3Compatible.ca.createSecret | default(false) }}"


meteringcon***REMOVED***g_template_hive_metastore_tls_secret: "{{ _hive_spec.metastore.con***REMOVED***g.tls.enabled and _hive_spec.metastore.con***REMOVED***g.tls.createSecret and _hive_spec.metastore.con***REMOVED***g.tls.secretName != 'hive-metastore-server-tls'}}"
meteringcon***REMOVED***g_template_hive_server_tls_secret: "{{ _hive_spec.server.con***REMOVED***g.tls.enabled and _hive_spec.server.con***REMOVED***g.tls.createSecret and _hive_spec.server.con***REMOVED***g.tls.secretName != 'hive-server-tls'}}"
meteringcon***REMOVED***g_template_hive_server_auth_secret: "{{ _hive_spec.server.con***REMOVED***g.metastoreTLS.enabled and _hive_spec.server.con***REMOVED***g.metastoreTLS.createSecret and _hive_spec.server.con***REMOVED***g.metastoreTLS.secretName != 'hive-server-auth-tls' }}"
meteringcon***REMOVED***g_template_hive_secrets: "{{ meteringcon***REMOVED***g_template_hive_metastore_tls_secret or meteringcon***REMOVED***g_template_hive_server_tls_secret or meteringcon***REMOVED***g_template_hive_server_auth_secret }}"

#
# Enabling Presto TLS/Auth by Default
#
meteringcon***REMOVED***g_template_presto_tls_secret: "{{ _presto_spec.con***REMOVED***g.tls.enabled and _presto_spec.con***REMOVED***g.tls.createSecret and _presto_spec.con***REMOVED***g.tls.secretName != 'presto-server-tls' }}"
meteringcon***REMOVED***g_template_presto_auth_secret: "{{ _presto_spec.con***REMOVED***g.auth.enabled and _presto_spec.con***REMOVED***g.auth.createSecret and _presto_spec.con***REMOVED***g.auth.secretName != 'presto-client-tls' }}"
meteringcon***REMOVED***g_template_presto_hive_tls_secret: "{{ _presto_spec.con***REMOVED***g.connectors.hive.tls.enabled and _presto_spec.con***REMOVED***g.connectors.hive.tls.createSecret and _presto_spec.con***REMOVED***g.connectors.hive.tls.secretName != 'presto-hive-metastore-client-tls' }}"
meteringcon***REMOVED***g_create_presto_tls_secrets: "{{ _presto_spec.con***REMOVED***g.tls.enabled and _presto_spec.con***REMOVED***g.tls.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_presto_auth_secrets: "{{ _presto_spec.con***REMOVED***g.auth.enabled and _presto_spec.con***REMOVED***g.auth.createSecret | default(false) }}"

#
# Reporting Operator
#
meteringcon***REMOVED***g_create_reporting_operator_auth_proxy_cookie_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.cookie.createSecret | default(true) }}"
meteringcon***REMOVED***g_create_reporting_operator_auth_proxy_htpasswd_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.htpasswd.createSecret | default(true) }}"
meteringcon***REMOVED***g_create_reporting_operator_auth_proxy_authenticated_emails_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.authenticatedEmails.createSecret | default(true) }}"
meteringcon***REMOVED***g_create_reporting_operator_auth_proxy_rbac: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.rbac.createAuthProxyClusterRole and (_reporting_op_spec.authProxy.subjectAccessReview.enabled and _reporting_op_spec.authProxy.delegateURLs.enabled) | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_prometheus_bearer_token: "{{ _reporting_op_spec.con***REMOVED***g.prometheus.metricsImporter.auth.tokenSecret.create | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_prometheus_certi***REMOVED***cate_authority: "{{ _reporting_op_spec.con***REMOVED***g.prometheus.certi***REMOVED***cateAuthority.con***REMOVED***gMap.create | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_aws_credentials: "{{ _reporting_op_spec.con***REMOVED***g.aws.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_presto_tls_secrets: "{{ _reporting_op_spec.con***REMOVED***g.presto.tls.enabled and _reporting_op_spec.con***REMOVED***g.presto.tls.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_presto_auth_secrets: "{{ _reporting_op_spec.con***REMOVED***g.presto.auth.enabled and _reporting_op_spec.con***REMOVED***g.presto.auth.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_hive_tls_secrets: "{{ _reporting_op_spec.con***REMOVED***g.hive.tls.enabled and _reporting_op_spec.con***REMOVED***g.hive.tls.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_hive_auth_secrets: "{{ _reporting_op_spec.con***REMOVED***g.hive.auth.enabled and _reporting_op_spec.con***REMOVED***g.hive.auth.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_tls_secrets: "{{ _reporting_op_spec.con***REMOVED***g.tls.api.createSecret | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_route: "{{ _reporting_op_spec.route.enabled | default(false) }}"
meteringcon***REMOVED***g_create_reporting_operator_cluster_monitoring_view_rbac: "{{ _reporting_op_spec.rbac.createClusterMonitoringViewRBAC | default(true) }}"
